{"version":3,"sources":["utils/index.js","components/elements/AppContext/AppHooks.js","components/elements/AppContext/AppContext.js","components/elements/Ticker/TickerCurrent.js","components/elements/Ticker/TickerHistorical.js","components/elements/Ticker/Ticker.js","images/Logo.js","components/elements/Header/Header.js","components/elements/Calculators/inputs/InputInvestment.js","components/elements/Calculators/inputs/CryptoList.js","components/elements/Calculators/inputs/InputCrypto.js","components/elements/Calculators/inputs/InputPurchasePrice.js","components/elements/Calculators/inputs/InputSellPrice.js","components/elements/Calculators/hooks.js","components/elements/Calculators/CalculatorRoi.js","components/elements/Calculators/Calculator.js","components/elements/Calculators/Calculators.js","components/elements/Share/Share.js","containers/home/Home.js","containers/lookandfeel/LookAndFeel.js","App.js","reportWebVitals.js","index.js"],"names":["pause","milliseconds","Promise","resolve","setTimeout","toDollars","n","num","isNaN","parseInt","Intl","NumberFormat","style","currency","format","api","tickerInit","btc","eth","bch","bnb","ltc","historicalTickerInit","value","diff","reducer","prevState","updatedProperty","fetchTickerData","endpoint","fetch","then","response","json","data","ETH","USD","BTC","BCH","LTC","BNB","historicalFetch","symbol","date","timestamp","Date","parse","toTimestamp","toUpperCase","getDiff","currentTickerValue","histTickerValue","toFixed","AppContext","createContext","historicalReducer","AppContextProvider","props","currentTicker","useState","ticker","setTicker","useEffect","fetchTicker","a","tickerObject","useCurrentTicker","historicalTickerDate","setHistoricalTickerDate","useReducer","historicalTicker","setHistoricalTicker","Provider","children","TickerPct","useContext","pct","setPct","hasOwnProperty","upOrDown","pctDisplay","replace","Fragment","className","TickerCurrent","TickerHistorical","state","dispatch","symbols","Object","keys","i","length","getTickersFromDate","useHistoricalTicker","Ticker","showDateSetter","setShowDateSetter","startDate","setStartDate","datum","now","toLocaleString","split","dateFormatter","onClick","selected","onChange","Logo","imgColor","mainColor","secondaryColor","width","height","viewBox","id","featurekey","transform","fill","xmlns","d","Header","InputInvestment","placeholder","e","target","getCryptoName","CryptoList","click","console","log","hasHistoricalData","map","InputCrypto","showDropdown","setDropdown","CalculatorContext","setPurchasedPrice","setPurchasedCryptoName","setPurchasedSymbol","purchasedCryptoName","isCopy","price","cryptoName","ls","set","purchasedPrice","useCurrentPrice","setUseCurrentPrice","purchasedSymbol","marginBottom","marginTop","type","InputSellPrice","sellPrice","setSellPrice","useCurrent","setUseCurrent","get","checked","formatCurrency","amount","CalculatorRoi","investment","numberOfCoins","costPerCoin","totalInvestment","setNumberOfCoins","costPerCoinStr","toString","parseFloat","useCoinUpdate","totalReturn","futureCost","setTotalReturn","returnValue","useTotalReturn","profitOrLoss","profit","setProfit","useSetProfit","isProfit","setIsProfit","useIsProfit","React","Calculator","closeClick","setInvestment","crypto","setCrypto","InputPurchasePrice","initialCalculatorList","Calculators","childCalculators","setChildCalculators","filtered","filter","item","Share","url","title","description","TwitterShareButton","via","hashtags","TwitterIcon","size","round","FacebookShareButton","FacebookIcon","LinkedinShareButton","source","LinkedinIcon","RedditShareButton","RedditIcon","Home","LookAndFeel","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b72765e6.chunk.js","sourcesContent":["export const dateFormatter = (date) => {\n  if(!date) { return; }\n  const datum = date || new Date(Date.now());\n  return new Date(datum).toLocaleString().split(\",\")[0];\n};\n\nexport const pause = milliseconds => {\n  return new Promise( resolve => {\n    setTimeout( () => {\n      resolve();\n    }, milliseconds)\n  });\n}\n\nexport const numberFormatter = n => {\n\n}\n\nexport const toDollars = n => {\n  const num = isNaN(n) ? parseInt(n) : n;\n  // if num is still NaN, just return\n  if(isNaN(num)){\n    return n;\n  }\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  }).format(num);\n}\n\nexport const toTimestamp = date => {\n  var datum = Date.parse(date);\n  return datum/1000;\n}","import { useState, useEffect, useReducer, useContext } from \"react\";\nimport { pause, toTimestamp } from \"../../../utils\";\nimport { AppContext } from \"../AppContext\";\n\nconst api = \"https://min-api.cryptocompare.com/data\";\n\nconst tickerInit = {\n  btc: \"...\",\n  eth: \"...\",\n  bch: \"...\",\n  bnb: \"...\",\n  ltc: \"...\"\n}\n\nconst historicalTickerInit = {\n  btc: { value: \"...\", diff: 0},\n  bch: { value: \"...\", diff: 0},\n  eth: { value: \"...\", diff: 0},\n  bnb: { value: \"...\", diff: 0},\n  ltc: { value: \"...\", diff: 0},\n}\n\nexport const useCurrentTicker = () => {\n\n  const [ticker, setTicker] = useState(tickerInit);\n\n  useEffect(() => {\n    const fetchTicker = async () => {\n      const tickerObject = await fetchTickerData();\n      setTicker(tickerObject);\n      await pause(10000);\n      fetchTicker();\n    }\n    fetchTicker();\n  }, []);\n\n  return ticker;\n}\n\nconst reducer = (prevState, updatedProperty) => ({\n  ...prevState,\n  ...updatedProperty\n});\n\nexport const useHistoricalTicker = (date) => {\n  \n  const [state, dispatch] = useReducer(reducer, historicalTickerInit)\n  const { setHistoricalTicker, currentTicker } = useContext(AppContext);\n\n  useEffect( () => {\n    const data = tickerInit;\n    dispatch(data);\n    const getTickersFromDate = async() => {\n      const symbols = Object.keys(tickerInit);\n      for(let i=0; i<symbols.length; i++) {\n        const symbol = symbols[i];\n        const value = await historicalFetch(symbol, date);\n        const diff = getDiff(currentTicker[symbol], value)\n        dispatch({ [symbol]: { value, diff  }})\n        setHistoricalTicker({ [symbol]: { value, diff  }});\n      }\n    }\n    getTickersFromDate();\n  }, [date, setHistoricalTicker, currentTicker ]);\n  return state;\n}\n\nconst fetchTickerData = () => {\n  const endpoint = `${api}/pricemulti?fsyms=ETH,BTC,BCH,LTC,BNB&tsyms=USD&extraParams=CryptoCalculator&ts=1605549600`;\n  const headers = {\n    \"Content-Type\": \"application-json\",\n  };\n  return fetch(endpoint, headers)\n    .then((response) => response.json())\n    .then((data) => {\n      return {\n        eth: data ? data.ETH.USD : \"...\",\n        btc: data ? data.BTC.USD : \"...\",\n        bch: data ? data.BCH.USD : \"...\",\n        ltc: data ? data.LTC.USD : \"...\",\n        bnb: data ? data.BNB.USD : \"...\",\n      }\n    });\n}\n\nconst historicalFetch = (symbol, date) => {\n  if(!date){ return \"...\"}\n  const timestamp = toTimestamp(date);\n  const endpoint = `${api}/pricehistorical?fsym=${symbol}&tsyms=USD&ts=${timestamp}&extraParams=CryptoCalculator`;\n  return fetch(endpoint)\n    .then((response) => response.json())\n    .then((data) => data[symbol.toUpperCase()].USD);\n}\n\n\nconst getDiff = (currentTickerValue, histTickerValue) => {\n  let pct;\n  if(currentTickerValue > histTickerValue ) {\n     pct = (100 - (histTickerValue / currentTickerValue * 100)).toFixed(2);\n  } else {\n    pct = \"-\" + (100 - (currentTickerValue / histTickerValue * 100)).toFixed(2);\n  }\n  return pct;\n}","import React, { createContext, useState, useReducer } from \"react\";\nimport {useCurrentTicker } from \"./AppHooks\";\n\nexport const AppContext = createContext();\n\nconst historicalReducer = (prevState, updatedProperty) => ({\n  ...prevState,\n  ...updatedProperty\n});\n\nexport const AppContextProvider = props => {\n\n  const currentTicker = useCurrentTicker();\n  const [historicalTickerDate, setHistoricalTickerDate] = useState();\n  const [historicalTicker, setHistoricalTicker] = useReducer(historicalReducer, {});\n\n  const value = {\n    historicalTickerDate,\n    setHistoricalTickerDate,\n    currentTicker,\n    historicalTicker,\n    setHistoricalTicker\n  }\n\n  return (\n    <AppContext.Provider value={value} >\n      {props.children}\n    </AppContext.Provider>\n  )\n}\n\nexport default AppContext;\n\n","import React, {useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../AppContext\";\nimport { toDollars } from \"../../../utils\";\n\nconst TickerCurrent = () => {\n\n  const { currentTicker } = useContext(AppContext);\n\n  return (\n    <div className=\"flex-row m-flex-row-15\">\n\n    <div >\n      <span className=\"ticker-label\">Bitcoin:</span>\n      <span className=\"ticker-value\">\n        {currentTicker && toDollars(currentTicker.btc)}\n        <TickerPct symbol={\"btc\"} />\n      </span>\n    </div>\n\n    <div className=\"d-margin-left-15\">\n      <span className=\"ticker-label\">Ethereum:</span>\n      <span className=\"ticker-value\">\n        {currentTicker && toDollars(currentTicker.eth)}\n        <TickerPct symbol={\"eth\"} />\n      </span>\n    </div>\n\n    <div className=\"d-margin-left-15\">\n      <span className=\"ticker-label\">Bitcoin Cash:</span>\n      <span className=\"ticker-value\">\n        {currentTicker && toDollars(currentTicker.bch)}\n        <TickerPct symbol={\"bch\"} />\n      </span>\n    </div>\n\n    <div className=\"d-margin-left-15\">\n      <span className=\"ticker-label\">Litecoin:</span>\n      <span className=\"ticker-value\">\n        {currentTicker && toDollars(currentTicker.ltc)}\n        <TickerPct symbol={\"ltc\"} />\n      </span>\n    </div>\n\n    <div className=\"d-margin-left-15\">\n      <span className=\"ticker-label\">Binance:</span>\n      <span className=\"ticker-value\">\n        {currentTicker && toDollars(currentTicker.bnb)}\n        <TickerPct symbol={\"bnb\"} />\n      </span>\n    </div>\n\n    </div>\n  );\n}\n\nconst TickerPct = ({ symbol }) => {\n  const { historicalTicker } = useContext(AppContext);\n  const [pct, setPct] = useState();\n  useEffect( () => {\n    if(historicalTicker.hasOwnProperty(symbol) && historicalTicker[symbol].hasOwnProperty(\"diff\")){\n      setPct(historicalTicker[symbol].diff);\n    }\n  }, [historicalTicker, symbol]);\n  const upOrDown = pct > 0 ? \"up\" : \"down\";\n  let pctDisplay = isNaN(pct) ? \"...\" : pct; \n  pctDisplay = pctDisplay.replace(/-/g, '');\n  \n  return (<React.Fragment>\n          { pct && (\n            <span className=\"pct-container\">\n              <span className={ `ticker-triangle-${upOrDown}`}>&#9662;</span>\n              <span className={ `ticker-${upOrDown}`}>{ pctDisplay }</span>\n            </span>\n          )}\n          </React.Fragment>)\n}\n\nexport default TickerCurrent;","import React, {useContext, useEffect} from \"react\";\nimport { AppContext } from \"../AppContext\";\nimport { useHistoricalTicker } from \"../AppContext/AppHooks\";\nimport { toDollars } from \"../../../utils\";\n\nconst TickerHistorical = () => {\n\n  const { historicalTickerDate } = useContext(AppContext);\n  const ticker = useHistoricalTicker(historicalTickerDate);\n  \n  return (\n    <React.Fragment>\n      <div >\n        { historicalTickerDate && <span className=\"ticker-date-value\">Data from {historicalTickerDate}</span> }\n      </div>\n      <div className=\"flex-row m-flex-row-15\">\n        \n      <div >\n      <span className=\"ticker-label\">Bitcoin:</span>\n      <span className=\"ticker-value\">{ticker && toDollars(ticker.btc.value)}</span>\n    </div>\n\n    <div >\n      <span className=\"ticker-label\">Ethereum:</span>\n      <span className=\"ticker-value\">{ticker && toDollars(ticker.eth.value)}</span>\n    </div>\n\n    <div >\n      <span className=\"ticker-label\">Bitcoin Cash:</span>\n      <span className=\"ticker-value\">{ticker && toDollars(ticker.bch.value)}</span>\n    </div>\n\n    <div >\n      <span className=\"ticker-label\">Litecoin:</span>\n      <span className=\"ticker-value\">{ticker && toDollars(ticker.ltc.value)}</span>\n    </div>\n\n    <div >\n      <span className=\"ticker-label\">Binance:</span>\n      <span className=\"ticker-value\">{ticker && toDollars(ticker.bnb.value)}</span>\n    </div>\n\n      </div>\n    </React.Fragment>\n    );\n}\n\nexport default TickerHistorical;","import React, {useState, useEffect, useContext} from \"react\";\nimport TickerCurrent from \"./TickerCurrent\";\nimport TickerHistorical from \"./TickerHistorical\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AppContext } from \"../AppContext\";\nimport { dateFormatter } from \"../../../utils\";\n\nconst Ticker = () => {\n\n  const [showDateSetter, setShowDateSetter] = useState();\n  const [startDate, setStartDate] = useState();\n  const { setHistoricalTickerDate } = useContext(AppContext);\n\n  useEffect(() => {\n    setHistoricalTickerDate(dateFormatter(startDate))\n    setShowDateSetter(false);\n  }, [startDate, setHistoricalTickerDate, setShowDateSetter])\n\n  return (\n    <div className=\"body-centered\">\n      <div className=\"body-centered ticker-text\">\n        <div className=\"m-flex-row-10\">\n          <span className=\"ticker-date-value\">Current</span>\n        </div>\n        <TickerCurrent />\n\n        <div className=\"flex-row-m margin-top-10 m-flex-row-10\">\n          <span className=\"link-normal margin-right-5\" onClick={ () => setShowDateSetter(!showDateSetter)}>\n            { showDateSetter ? \"Cancel\" : <i>Compare with previous date</i>}\n          </span>\n          <span>{ \n            showDateSetter && \n            <DatePicker selected={startDate} onChange={ date => setStartDate(date)} /> \n            }</span>\n        </div>\n        { startDate && <TickerHistorical /> }\n        \n      </div>\n    </div>\n    )\n}\n\nexport default Ticker;","import React from \"react\";\n\nconst Logo = ({ imgColor=\"#ffffff\", mainColor=\"#016565\", secondaryColor=\"#c12f2f\" }) => {\n  return (\n    <div className=\"logo-container\">\n   <svg width=\"374.5519169329073\" height=\"39.450157901019566\" viewBox=\"0 0 374.5519169329073 39.450157901019566\" className=\"css-1j8o68f\"><defs id=\"SvgjsDefs7099\"></defs><g id=\"SvgjsG7100\" featurekey=\"nYIUkx-0\" transform=\"matrix(9.677328207486227,0,0,9.677328207486227,10.02588154780233,-1.9644412485819451)\" fill={imgColor}><g xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3.726,1.855C3.44,2.127,3.042,2.237,2.661,2.292c-0.34,0.05-0.695,0.071-0.999,0.203C1.344,2.634,1.144,2.864,1.16,3.22   c0.01,0.214,0.125,0.423,0.287,0.584C1.492,3.84,1.538,3.874,1.586,3.905C1.583,3.899,1.58,3.892,1.575,3.886   C1.382,3.621,1.232,2.862,2.242,2.697C2.445,2.664,2.648,2.63,2.85,2.584c0.178-0.041,0.496-0.141,0.531-0.16   c0.029-0.017-0.189,0.228-0.857,0.42C1.463,3.149,1.789,4.03,2.113,4.131C2.237,4.161,2.367,4.176,2.5,4.176   c0.926,0,1.677-0.75,1.677-1.676c0-0.333-0.097-0.643-0.264-0.903C3.868,1.695,3.805,1.779,3.726,1.855z\"></path><path d=\"M0.824,2.5c0,0.184,0.03,0.359,0.084,0.525c0.02-0.182,0.082-0.354,0.198-0.5c0.21-0.267,0.536-0.392,0.875-0.459   C2.319,2,2.679,1.992,3.026,1.908c0.192-0.046,0.387-0.121,0.542-0.244C3.697,1.56,3.757,1.402,3.623,1.255   C3.574,1.211,3.522,1.169,3.468,1.131c0.098,0.201,0.022,0.5-0.773,0.578C2.491,1.73,2.288,1.749,2.087,1.777   C2.028,1.785,1.955,1.796,1.88,1.809c0,0,0.066-0.082,0.532-0.188c0.958-0.216,0.779-0.633,0.495-0.748   c-0.13-0.032-0.267-0.05-0.407-0.05C1.574,0.824,0.824,1.574,0.824,2.5z\"></path></g></g><g id=\"SvgjsG7101\" featurekey=\"PXhRQw-0\" transform=\"matrix(2.0801255914820853,0,0,2.0801255914820853,53.87981210871746,-18.089390891431385)\" fill={mainColor}><path d=\"M3.58 20.04 c-0.12 -0.02 -0.24 -0.02 -0.38 -0.04 c-0.26 -0.04 -0.5 -0.04 -0.76 -0.08 c-0.1 -0.02 -0.16 -0.04 -0.22 -0.06 s-0.12 -0.02 -0.16 -0.04 c-0.1 -0.02 -0.16 -0.06 -0.2 -0.12 c-0.06 -0.06 -0.08 -0.14 -0.08 -0.24 c-0.02 -0.06 -0.02 -0.12 -0.02 -0.2 c0 -0.06 0 -0.16 -0.02 -0.26 l-0.06 -1.16 c-0.02 -0.38 -0.02 -0.78 -0.04 -1.16 s-0.02 -0.78 -0.04 -1.16 l-0.06 -1.14 c-0.02 -0.2 -0.02 -0.4 -0.02 -0.6 c-0.02 -0.2 -0.02 -0.4 -0.02 -0.6 s0 -0.4 0.02 -0.6 l0.06 -0.62 c0.02 -0.12 0.06 -0.24 0.12 -0.34 c0.06 -0.08 0.16 -0.12 0.28 -0.12 c0.06 0 0.12 0 0.14 0.02 l0.4 0 c0.22 -0.06 0.5 -0.08 0.84 -0.08 c0.9 0 2.46 0.44 2.86 1.28 c0.24 0.26 0.38 0.56 0.44 0.94 s0 0.72 -0.22 0.98 c-0.1 0.28 -0.26 0.48 -0.46 0.58 l-0.32 0.2 l-0.36 0.2 c0.06 0.02 0.1 0.02 0.14 0.04 s0.08 0.02 0.1 0.04 s0.06 0.02 0.1 0.04 s0.08 0.02 0.1 0.04 c0.22 0.06 0.4 0.16 0.54 0.28 c0.14 0.14 0.28 0.3 0.42 0.48 c0.1 0.06 0.16 0.12 0.2 0.18 l0.14 0.24 c0.16 0.42 0.2 0.82 0.14 1.2 c-0.06 0.4 -0.26 0.76 -0.6 1.1 c-0.06 0.1 -0.12 0.16 -0.2 0.2 l-0.28 0.12 c-0.18 0.18 -1.02 0.38 -1.34 0.38 l-0.32 0.06 c-0.1 0.02 -0.2 0.02 -0.28 0.02 l-0.2 0 l-0.38 0 z M3.62 15.24 c0.54 0 1 -0.06 1.42 -0.2 c0.44 -0.12 0.88 -0.4 1 -0.86 c0.06 -0.2 0.06 -0.42 0 -0.64 s-0.18 -0.44 -0.34 -0.62 l-0.08 -0.12 c-0.04 -0.04 -0.08 -0.06 -0.1 -0.06 l0 -0.02 c-0.1 -0.04 -0.24 -0.16 -0.3 -0.24 l0 -0.02 c-0.06 0 -0.12 -0.02 -0.18 -0.08 c-0.06 0 -0.08 0 -0.1 -0.02 c0.02 0 -0.02 -0.02 -0.1 -0.04 l-0.06 -0.04 l-0.06 -0.04 c-0.02 -0.02 -0.06 -0.02 -0.08 -0.04 c-0.02 0 -0.06 0 -0.08 -0.02 l-0.34 -0.1 c-0.12 -0.06 -0.24 -0.08 -0.38 -0.08 l-0.02 0 l-0.18 0.06 c-0.04 0.02 -0.1 0.02 -0.18 0.02 c-0.14 0 -0.28 -0.04 -0.44 -0.12 c-0.1 0.12 -0.22 0.18 -0.4 0.18 l-0.24 -0.04 c0.06 0.1 0.1 0.2 0.1 0.3 c-0.02 0.06 -0.02 0.16 -0.02 0.3 l0 0.94 c-0.02 0.16 -0.02 0.32 -0.02 0.48 l0 0.46 c0 0.42 0.1 0.48 0.5 0.52 l0.32 0 c0.1 0 0.2 0.04 0.3 0.1 z M4.66 15.280000000000001 l0.02 0 l0 -0.02 z M3.22 19.44 c0.14 -0.08 0.28 -0.12 0.4 -0.12 s0.22 0.04 0.32 0.1 l0.02 0 c0.06 -0.1 0.14 -0.14 0.26 -0.14 c0.24 -0.02 0.48 -0.06 0.74 -0.12 c0.24 -0.04 0.48 -0.1 0.7 -0.16 c0.02 0 0.06 0.02 0.08 0.04 c0 -0.06 0.02 -0.12 0.06 -0.18 l0.12 -0.12 c0.18 -0.22 0.32 -0.42 0.42 -0.62 c0.08 -0.22 0.08 -0.46 0 -0.74 c-0.04 -0.1 -0.04 -0.2 0.02 -0.28 l0 -0.02 c-0.02 -0.06 -0.06 -0.12 -0.1 -0.18 c-0.04 -0.04 -0.08 -0.08 -0.12 -0.14 c-0.06 -0.04 -0.1 -0.08 -0.14 -0.12 c-0.06 -0.04 -0.1 -0.08 -0.14 -0.14 c-0.06 -0.04 -0.1 -0.08 -0.14 -0.12 l-0.12 -0.12 c-0.1 -0.06 -0.18 -0.08 -0.24 -0.08 c-0.12 -0.08 -0.48 -0.22 -0.62 -0.24 c-0.02 -0.02 -0.06 -0.02 -0.08 -0.02 s-0.06 0 -0.08 -0.02 c-0.06 -0.02 -0.08 -0.06 -0.06 -0.14 c-0.02 0 -0.02 0 -0.04 0.02 l-0.16 0 c-0.02 0 -0.02 0 -0.04 -0.02 l-1.24 0 c-0.02 0.02 -0.06 0.02 -0.1 0.02 c-0.1 0 -0.22 -0.02 -0.32 -0.06 l-0.18 0 c0.02 0.02 0.02 0.06 0.02 0.08 c0.02 0.26 0.02 0.5 0.04 0.76 c0 0.26 0 0.5 0.02 0.76 s0.02 0.5 0.02 0.76 l-0.06 0.76 c0 0.18 0.02 0.3 0.08 0.36 c0.04 0.08 0.16 0.12 0.34 0.12 c0.04 0.02 0.1 0.02 0.18 0.02 c0.06 0.02 0.12 0.06 0.14 0.1 z M11.38 20 c-0.16 0 -0.44 -0.14 -0.44 -0.32 l0 -0.2 c0 -0.06 0 -0.12 0.02 -0.18 c-0.08 -0.34 -0.12 -0.7 -0.12 -1.06 c-0.02 -0.18 -0.02 -0.34 -0.02 -0.52 l0 -2.04 c-0.02 -0.26 -0.02 -0.5 -0.04 -0.76 l-0.06 -0.74 c-0.02 -0.18 -0.02 -0.34 -0.02 -0.52 c0 -0.52 0.02 -1 0.1 -1.52 c-0.06 -0.04 -0.06 -0.08 0 -0.1 c0 -0.2 0.08 -0.38 0.24 -0.56 c0.06 -0.08 0.14 -0.12 0.22 -0.12 c0.14 0 0.28 0.1 0.38 0.28 c0.02 0.06 0.02 0.1 0.04 0.14 s0.02 0.08 0.04 0.1 l0 0.82 c0.06 0.06 0.06 0.12 0 0.18 c-0.02 0.1 -0.02 0.22 0 0.32 c0 0.14 -0.02 0.24 -0.08 0.34 c-0.02 0.06 -0.02 0.12 0 0.18 c0 0.06 0 0.14 0.02 0.2 c0.02 0.1 -0.02 0.22 -0.08 0.36 c0.06 0.54 0.08 1.06 0.06 1.6 s-0.02 1.06 0 1.6 l0 0.18 c0 0.06 0 0.14 0.02 0.2 s0.02 0.12 0.02 0.18 c-0.02 0.06 -0.02 0.12 -0.04 0.18 c0.06 0.26 0.08 0.52 0.06 0.78 c-0.02 0.14 -0.02 0.26 -0.04 0.38 s-0.02 0.24 -0.04 0.38 c-0.02 0.16 -0.1 0.24 -0.24 0.24 z M23.080000000000002 11.72 c0.12 0.12 0.16 0.2 0.12 0.26 c-0.06 0.08 -0.14 0.12 -0.26 0.14 c-0.04 0.02 -0.1 0.02 -0.18 0.02 l-0.18 0 l-2.24 0.12 c-0.1 0 -0.18 -0.04 -0.24 -0.1 l0.04 -0.04 l-0.02 0 c-0.02 0 -0.02 0.02 -0.02 0.04 c-0.32 0.02 -0.48 0.18 -0.46 0.52 c0.06 0.36 0.06 0.74 0.02 1.12 c-0.02 0.18 -0.04 0.38 -0.04 0.56 c-0.02 0.2 -0.02 0.4 0 0.58 c0.02 0.38 0.02 0.74 0.04 1.1 s0.02 0.72 0.04 1.08 s0.02 0.72 0 1.08 s-0.06 0.72 -0.08 1.1 l0 0.24 c-0.02 0.06 -0.02 0.16 -0.02 0.26 c0 0.22 -0.16 0.24 -0.34 0.24 l-0.18 -0.06 c-0.06 -0.02 -0.1 -0.08 -0.12 -0.2 c0 -0.34 0 -0.68 -0.02 -1.02 l-0.06 -1.02 c-0.02 -0.34 -0.04 -0.7 -0.02 -1.04 c0 -0.34 0.02 -0.68 0.04 -1.02 c0.02 -0.06 0.02 -0.14 0.04 -0.22 l0 -0.2 c-0.02 -0.06 -0.02 -0.14 -0.02 -0.22 l0 -1.44 c0 -0.4 0.02 -0.8 0.04 -1.2 c-0.18 -0.1 -0.36 -0.14 -0.58 -0.14 c-0.24 0 -0.46 0.02 -0.66 0.06 l-1.02 0.06 c-0.18 0.02 -0.34 0.02 -0.52 0.02 l-0.52 0 c-0.18 0 -0.32 -0.08 -0.38 -0.24 c-0.06 -0.18 0 -0.3 0.2 -0.36 c0.1 -0.06 0.22 -0.1 0.36 -0.1 l0.2 0 c0.04 0.02 0.1 0.02 0.2 0.02 c0.16 -0.06 0.34 -0.1 0.52 -0.1 l0.16 0 c0.06 0 0.1 0 0.16 0.02 s0.1 0.02 0.16 0.02 l0.16 0 c0.06 -0.08 0.14 -0.12 0.24 -0.12 l0.1 0 c0.02 0.02 0.04 0.02 0.08 0.02 l2.34 0 c0.26 0 0.54 0 0.8 -0.02 l0.78 -0.06 l0.24 0 c0.42 0 0.72 0.02 1.1 0.24 z M29.500000000000004 20.02 c-0.1 0 -0.22 0 -0.4 -0.04 c-0.32 -0.04 -1.16 -0.14 -1.3 -0.42 c-0.54 -0.26 -0.96 -0.64 -1.22 -1.16 c-0.1 -0.08 -0.16 -0.18 -0.18 -0.32 c-0.3 -0.44 -0.5 -0.9 -0.6 -1.4 c-0.1 -0.48 -0.1 -0.98 -0.02 -1.52 l0.04 -0.22 c0.02 -0.36 0.1 -0.7 0.28 -1.02 c0.14 -0.3 0.32 -0.58 0.56 -0.86 c0.72 -0.96 2.06 -1.48 3.22 -1.48 c0.36 0 0.56 0 0.9 0.16 c0.22 0 0.24 0 0.4 0.16 c0.2 0.02 0.38 0.08 0.52 0.22 l0.2 0.2 l0.2 0.2 c0.08 0.06 0.08 0.14 0 0.22 c-0.06 0.06 -0.12 0.08 -0.22 0.08 c-0.02 0 -0.04 0 -0.06 -0.02 l-0.06 0 c-0.12 -0.02 -0.22 -0.08 -0.3 -0.18 c-0.1 -0.1 -0.22 -0.16 -0.34 -0.18 c-0.32 -0.14 -0.68 -0.22 -1.08 -0.22 c-0.32 0 -0.68 0.06 -1.08 0.16 c-1 0.48 -1.74 1.14 -2.06 2.24 c-0.02 0.14 -0.08 0.26 -0.16 0.32 l-0.06 1.7 c0 0.16 0.02 0.3 0.08 0.42 c0.32 1.1 1 2.04 2.18 2.28 c0.06 0.02 0.14 0.02 0.2 0.02 c0.12 0.04 0.28 0.06 0.4 0.06 c1 0 1.64 -0.28 2.36 -1 c0.06 -0.04 0.12 -0.08 0.18 -0.14 c0.04 -0.04 0.22 -0.2 0.26 -0.2 s0.08 0.02 0.12 0.06 c0.14 0.14 0.14 0.28 -0.02 0.44 l-0.22 0.22 c-0.08 0.08 -0.16 0.16 -0.22 0.24 c-0.32 0.36 -0.72 0.56 -1.16 0.72 c-0.4 0.18 -0.9 0.26 -1.34 0.26 z M27.380000000000003 13.08 c0 -0.02 0 -0.02 0.02 -0.02 l-0.02 0 l0 0.02 z M38.980000000000004 20.06 c-1.34 0 -2.72 -0.76 -3.24 -2.02 c-0.06 -0.14 -0.12 -0.3 -0.22 -0.46 c-0.1 -0.14 -0.16 -0.3 -0.18 -0.5 c-0.02 -0.02 -0.04 -0.04 -0.04 -0.06 c-0.2 -0.42 -0.28 -0.84 -0.22 -1.24 c0.04 -0.42 0.1 -0.84 0.2 -1.24 l0.08 -0.32 l0.06 -0.32 c0.02 -0.2 0.12 -0.38 0.32 -0.56 c0.1 -0.3 0.32 -0.56 0.62 -0.78 c0.02 -0.04 0.06 -0.08 0.1 -0.12 l0.12 -0.12 c0.08 -0.06 0.16 -0.14 0.22 -0.22 c0.06 -0.1 0.14 -0.18 0.22 -0.24 c0.06 -0.06 0.16 -0.08 0.28 -0.08 l0.04 0 c0.34 -0.22 0.68 -0.38 1 -0.46 c0.32 -0.06 0.68 -0.1 1.08 -0.1 c0.1 0 0.16 0 0.2 0.02 l0.14 0 c1.2 0.12 2.04 0.6 2.64 1.66 c0.3 0.46 0.5 0.96 0.56 1.5 s0.06 1.08 0 1.64 l0 0.16 c0 0.06 0 0.1 0.02 0.16 c0 0.12 -0.06 0.22 -0.16 0.3 l0 0.08 c0 0.1 0 0.18 0.02 0.22 c0 0.08 -0.04 0.16 -0.1 0.22 c-0.02 0.02 -0.02 0.06 -0.04 0.1 s-0.02 0.08 -0.04 0.1 c-0.06 0.1 -0.08 0.18 -0.1 0.24 c-0.06 0.12 -0.12 0.24 -0.16 0.36 c-0.06 0.14 -0.14 0.24 -0.26 0.34 l-0.1 0.16 c0 0.1 -0.02 0.16 -0.06 0.18 c-0.08 0.06 -0.14 0.08 -0.18 0.1 s-0.08 0.06 -0.14 0.12 c-0.02 0.04 -0.08 0.1 -0.14 0.16 c-0.74 0.6 -1.38 1 -2.36 1 c-0.04 0.02 -0.1 0.02 -0.18 0.02 z M38.900000000000006 19.18 l0.16 0 c0.08 0 0.16 0 0.24 -0.02 c0.16 0 0.32 -0.02 0.48 -0.06 l0.24 0 l0.66 -0.36 c0.22 -0.14 0.42 -0.28 0.58 -0.42 l0.02 0 l-0.04 -0.04 c0.02 -0.14 0.08 -0.26 0.2 -0.4 c0.1 -0.1 0.18 -0.22 0.24 -0.36 c0.34 -0.62 0.58 -1.4 0.62 -2.1 c0.02 -0.38 0 -0.72 -0.08 -1.04 c-0.1 -0.38 -0.36 -1.06 -0.66 -1.36 c-0.06 -0.04 -0.1 -0.08 -0.14 -0.12 l-0.14 -0.14 c-0.08 -0.06 -0.14 -0.1 -0.18 -0.14 c-0.06 -0.04 -0.1 -0.12 -0.1 -0.22 c0 -0.02 0 -0.02 0.02 -0.02 l-0.02 0 c-0.52 -0.28 -1.04 -0.42 -1.54 -0.42 c-0.28 0 -0.58 0.04 -0.88 0.1 c-0.3 0.08 -0.58 0.18 -0.84 0.32 c-0.02 0.02 -0.04 0.02 -0.06 0.02 c-0.04 0 -0.1 0.04 -0.1 0.08 c0 0.02 0 0.02 -0.02 0.04 c-0.06 0.04 -0.1 0.08 -0.14 0.12 l-0.16 0.16 c-0.12 0.12 -0.24 0.18 -0.36 0.2 c-0.44 0.52 -0.56 1.18 -0.68 1.84 l0 0.18 c-0.02 0.06 -0.04 0.1 -0.1 0.16 c-0.02 0.06 0 0.12 0.04 0.18 c0.02 0.06 0.02 0.1 -0.04 0.16 l0 0.08 c0.04 0.04 0.08 0.12 0.1 0.22 c0 0.1 0 0.18 -0.02 0.22 c0.02 0.06 0.02 0.1 0.02 0.14 c0 0.06 0 0.1 0.02 0.16 s0.02 0.1 0.02 0.16 s0 0.1 0.02 0.16 c0.06 0.1 0.08 0.18 0.1 0.24 l0.06 0.08 l0.06 0.08 c0.02 0.08 0.04 0.16 0.04 0.22 l0.02 0 c0.1 0.18 0.2 0.32 0.34 0.5 l0.36 0.54 c0.22 0.22 0.48 0.4 0.76 0.54 c0.24 0.14 0.54 0.26 0.88 0.32 z M47.18 20 c-0.16 0 -0.44 -0.14 -0.44 -0.32 l0 -0.2 c0 -0.06 0 -0.12 0.02 -0.18 c-0.08 -0.34 -0.12 -0.7 -0.12 -1.06 c-0.02 -0.18 -0.02 -0.34 -0.02 -0.52 l0 -2.04 c-0.02 -0.26 -0.02 -0.5 -0.04 -0.76 l-0.06 -0.74 c-0.02 -0.18 -0.02 -0.34 -0.02 -0.52 c0 -0.52 0.02 -1 0.1 -1.52 c-0.06 -0.04 -0.06 -0.08 0 -0.1 c0 -0.2 0.08 -0.38 0.24 -0.56 c0.06 -0.08 0.14 -0.12 0.22 -0.12 c0.14 0 0.28 0.1 0.38 0.28 c0.02 0.06 0.02 0.1 0.04 0.14 s0.02 0.08 0.04 0.1 l0 0.82 c0.06 0.06 0.06 0.12 0 0.18 c-0.02 0.1 -0.02 0.22 0 0.32 c0 0.14 -0.02 0.24 -0.08 0.34 c-0.02 0.06 -0.02 0.12 0 0.18 c0 0.06 0 0.14 0.02 0.2 c0.02 0.1 -0.02 0.22 -0.08 0.36 c0.06 0.54 0.08 1.06 0.06 1.6 s-0.02 1.06 0 1.6 l0 0.18 c0 0.06 0 0.14 0.02 0.2 s0.02 0.12 0.02 0.18 c-0.02 0.06 -0.02 0.12 -0.04 0.18 c0.06 0.26 0.08 0.52 0.06 0.78 c-0.02 0.14 -0.02 0.26 -0.04 0.38 s-0.02 0.24 -0.04 0.38 c-0.02 0.16 -0.1 0.24 -0.24 0.24 z M51.7 20.22 c-0.2 0 -0.26 -0.04 -0.34 -0.22 c-0.12 -0.52 -0.14 -1.12 -0.14 -1.64 c-0.02 -0.26 -0.02 -0.5 -0.02 -0.74 s0 -0.48 -0.02 -0.74 l-0.06 -1.52 l-0.06 -1.5 c-0.02 -0.52 -0.02 -1.04 0 -1.54 c0 -0.14 0.02 -0.3 0.06 -0.5 c0.02 -0.18 0.14 -0.3 0.32 -0.32 c0.18 0.14 0.36 0.32 0.5 0.54 s0.28 0.38 0.42 0.52 s0.26 0.3 0.36 0.52 c0.12 0.16 0.26 0.32 0.4 0.46 l0.2 0.24 l0.2 0.24 l0.12 0.12 c0.04 0.04 0.08 0.08 0.14 0.12 c0.1 0.1 0.14 0.2 0.16 0.32 c0.1 0.06 0.18 0.14 0.24 0.2 l0.18 0.22 l0.18 0.16 c0.04 0.06 0.08 0.12 0.14 0.18 l0.12 0.2 l0.12 0.2 c0.02 0.02 0.02 0.04 0.02 0.08 l0.08 0.06 c0.22 0.18 0.44 0.38 0.62 0.6 c0.28 0.4 0.62 0.8 0.98 1.16 c0.14 0.18 0.32 0.4 0.48 0.56 c0 -0.38 -0.04 -0.72 -0.08 -1.1 c-0.02 -0.26 -0.02 -0.54 0 -0.8 c0.02 -0.14 0.02 -0.26 0.02 -0.4 l-0.04 -0.4 c0 -0.06 0.02 -0.12 0.08 -0.18 c0.02 -0.14 0.02 -0.3 0 -0.46 s0 -0.3 0.08 -0.44 l0 -1.22 c0 -0.18 0 -0.36 0.02 -0.56 c0 -0.2 0.02 -0.38 0.04 -0.56 l0.06 -0.48 c0 -0.22 0.12 -0.32 0.36 -0.32 c0.22 0 0.36 0.12 0.38 0.34 l0.06 0.6 c0 0.22 0 0.46 -0.02 0.72 c-0.06 0.7 -0.1 1.42 -0.1 2.12 c-0.04 0.52 -0.06 1.06 -0.06 1.6 l0 0.82 c0 0.06 0 0.14 0.02 0.22 c0 0.1 0 0.2 0.02 0.3 s0.02 0.22 0.02 0.34 l0 0.34 l0 0.34 c-0.02 0.1 -0.02 0.2 -0.04 0.3 c-0.04 0.18 -0.12 0.32 -0.22 0.4 c-0.06 0.04 -0.1 0.06 -0.16 0.06 c-0.22 0 -1.2 -1.06 -1.34 -1.24 c-0.18 -0.18 -0.26 -0.28 -0.28 -0.32 c-0.4 -0.32 -0.74 -0.7 -1 -1.16 c-0.08 -0.02 -0.12 -0.06 -0.14 -0.1 c-0.06 -0.06 -0.08 -0.1 -0.1 -0.14 c-0.14 -0.1 -0.26 -0.22 -0.36 -0.36 c-0.06 -0.06 -0.1 -0.14 -0.14 -0.2 c-0.06 -0.06 -0.1 -0.14 -0.16 -0.2 c-0.14 -0.22 -0.3 -0.44 -0.48 -0.62 c-0.18 -0.16 -0.36 -0.36 -0.5 -0.6 c-0.02 -0.04 -0.06 -0.08 -0.1 -0.12 s-0.08 -0.08 -0.1 -0.12 c-0.06 -0.08 -0.12 -0.16 -0.14 -0.26 l-0.12 -0.12 c-0.06 -0.06 -0.1 -0.1 -0.12 -0.14 c-0.02 -0.02 -0.04 -0.06 -0.06 -0.1 s-0.04 -0.08 -0.06 -0.1 c-0.04 -0.06 -0.08 -0.1 -0.1 -0.14 c-0.04 -0.1 -0.12 -0.16 -0.22 -0.16 c-0.04 0 -0.06 0.06 -0.06 0.2 c0.02 0.06 0.02 0.14 0.02 0.22 l0 0.22 c-0.02 0.06 -0.02 0.14 -0.02 0.22 l0 0.22 l0 0.72 c0 0.24 0 0.48 0.02 0.72 l0 1.46 c0.02 0.22 0.06 0.42 0.08 0.6 c0.02 0.2 0.02 0.4 0.02 0.58 c-0.02 0.38 -0.06 0.78 -0.12 1.22 c-0.02 0.14 -0.12 0.24 -0.26 0.26 z M67.56 20 c-0.14 0 -0.24 -0.14 -0.28 -0.4 c-0.06 -0.34 -0.08 -0.66 -0.1 -1 c-0.04 -0.68 -0.04 -1.32 -0.04 -2 c-0.04 -0.58 -0.06 -1.18 -0.06 -1.78 c0 -0.52 0.04 -1.08 0.08 -1.6 c0 -0.26 0 -0.52 0.02 -0.78 l0 -0.2 c-0.02 -0.06 0.02 -0.14 0.08 -0.2 c0 -0.2 0 -0.34 0.02 -0.4 c0.02 -0.1 0.06 -0.18 0.1 -0.2 c0.04 -0.04 0.1 -0.06 0.2 -0.08 c0.06 -0.02 0.12 -0.02 0.18 -0.02 s0.12 0 0.2 -0.02 c0.56 -0.06 1.12 -0.06 1.7 -0.06 c0.28 0 0.56 0.02 0.84 0.1 l0.38 0.18 c0.06 0 0.12 0.02 0.18 0.06 l0.08 0.06 l0.08 0.06 c0.32 0.12 0.62 0.28 0.82 0.56 l0.26 0.26 c0.08 0.08 0.16 0.16 0.22 0.26 c0.14 0.18 0.22 0.4 0.24 0.66 c0.1 0.18 0.16 0.38 0.16 0.6 c-0.02 0.22 -0.08 0.44 -0.14 0.62 c-0.06 0.1 -0.1 0.2 -0.16 0.28 c-0.06 0.1 -0.12 0.18 -0.18 0.26 c-0.46 0.52 -1.3 0.8 -1.96 0.84 l-0.16 0 c-0.26 0.08 -0.5 0.1 -0.76 0.1 c-0.38 0 -0.76 -0.02 -1.14 -0.06 l-0.22 0 c-0.14 0 -0.22 0.02 -0.24 0.08 s-0.02 0.22 0 0.44 c0.02 0.24 0.02 0.48 0.04 0.72 s0.02 0.48 0.04 0.7 c0.02 0.48 0.02 0.96 0 1.44 c-0.02 0.04 -0.02 0.08 -0.02 0.12 s0 0.08 -0.02 0.1 c-0.02 0.08 -0.06 0.14 -0.12 0.2 c-0.16 0.06 -0.26 0.1 -0.32 0.1 z M68.12 15.52 l0.2 0 c0.14 0 0.26 0 0.4 -0.02 l0.4 -0.06 l0.4 -0.06 l0.4 -0.06 l0.46 0 c0.08 -0.02 0.12 -0.04 0.12 -0.04 c0.06 -0.02 0.16 -0.06 0.26 -0.08 c0.04 -0.02 0.08 -0.02 0.12 -0.02 s0.08 0 0.14 -0.02 c0.02 0 0.02 0 0.04 -0.02 c0.1 -0.02 0.16 -0.04 0.14 -0.04 c0.02 -0.02 0.04 -0.02 0.06 -0.02 s0.04 0 0.06 -0.02 c0.06 -0.02 0.1 -0.06 0.14 -0.1 s0.08 -0.08 0.14 -0.1 c0.06 -0.04 0.16 -0.08 0.3 -0.1 c0.54 -0.84 0.4 -1.6 -0.42 -2.26 c-0.04 -0.02 -0.1 -0.1 -0.2 -0.22 c-0.28 -0.06 -0.52 -0.16 -0.72 -0.26 c-0.58 -0.28 -1.48 -0.36 -2.12 -0.36 l-0.02 0 c-0.24 0.06 -0.36 0.22 -0.34 0.5 c0.02 0.06 0.02 0.14 0.02 0.2 l0 0.2 c-0.02 0.06 -0.02 0.14 -0.02 0.2 s0 0.14 -0.02 0.2 l0 1.04 c-0.02 0.18 -0.02 0.36 -0.02 0.54 s0 0.34 -0.02 0.52 l0 0.16 c0 0.06 -0.02 0.1 -0.06 0.14 c0.02 0.02 0.02 0.06 0.02 0.08 c0.02 0 0.04 0.02 0.06 0.04 l0.04 0 z M69.84 15.52 c0.02 0 0.04 0 0.06 -0.02 c-0.04 0 -0.04 0 -0.06 0.02 z M69.1 15.58 c0.02 -0.02 0.06 -0.02 0.12 -0.02 c-0.02 -0.02 -0.04 -0.02 -0.06 -0.02 s-0.04 0.02 -0.06 0.04 z M68.92 15.879999999999999 l0.02 0 l0 -0.02 c0 0.02 0 0.02 -0.02 0.02 z M67.64 18.16 l0.02 0 l0 -0.02 c0 0.02 0 0.02 -0.02 0.02 z M67.62 18.58 c0 -0.02 0 -0.04 -0.02 -0.06 l0 0.04 z M76.38 20.3 c-0.12 0 -0.2 -0.04 -0.24 -0.12 c-0.06 -0.06 -0.06 -0.16 -0.04 -0.28 c-0.02 -0.06 -0.02 -0.16 -0.02 -0.3 l0 -0.26 c-0.02 -0.04 -0.02 -0.08 -0.04 -0.14 c-0.02 -0.04 -0.02 -0.08 -0.02 -0.14 c-0.06 -1.6 -0.06 -3.2 -0.06 -4.8 c0 -0.52 0 -1.06 -0.02 -1.6 l0 -0.28 c-0.02 -0.08 0.02 -0.16 0.08 -0.26 l0 -0.02 c0.06 -0.14 0.14 -0.24 0.24 -0.28 c0.08 -0.04 0.18 -0.06 0.28 -0.06 l0.26 0 c0.06 -0.06 0.14 -0.08 0.24 -0.08 l0.08 0 c0.06 0 0.12 0 0.16 -0.02 c0.26 -0.04 0.52 -0.06 0.76 -0.06 c0.26 0 0.56 0.04 0.94 0.1 c0.22 0.06 0.46 0.12 0.72 0.2 c0.24 0.1 0.48 0.2 0.7 0.32 c0.46 0.3 0.8 0.56 0.98 1.1 c0.18 0.18 0.28 0.44 0.3 0.74 c0.02 0.32 -0.04 0.58 -0.18 0.78 c-0.32 0.48 -0.8 0.84 -1.32 1.04 c-0.1 0.1 -0.22 0.14 -0.34 0.14 c-0.26 0.06 -0.54 0.12 -0.86 0.14 l-0.9 0.06 l0.24 0.16 l0.24 0.18 c0.06 0.06 0.14 0.12 0.22 0.18 s0.16 0.12 0.22 0.18 c0.1 0.06 0.18 0.1 0.28 0.14 c0.08 0.06 0.16 0.12 0.26 0.18 l0.24 0.2 l0.22 0.22 c0.18 0.12 0.34 0.24 0.5 0.36 s0.32 0.24 0.5 0.36 c0.32 0.24 0.64 0.5 0.94 0.8 c0.26 0.24 0.2 0.4 -0.16 0.48 c-0.62 -0.26 -1.2 -0.64 -1.72 -1.16 c-0.1 -0.06 -0.18 -0.14 -0.28 -0.2 s-0.18 -0.14 -0.28 -0.2 s-0.18 -0.14 -0.26 -0.2 c-0.1 -0.06 -0.18 -0.14 -0.24 -0.24 c-0.18 -0.1 -0.34 -0.22 -0.52 -0.34 c-0.52 -0.34 -1.04 -0.66 -1.58 -0.94 l-0.06 1.62 c-0.02 0.26 -0.02 0.54 -0.02 0.8 c0 0.28 0 0.56 -0.02 0.82 c0 0.08 0 0.14 -0.02 0.18 l-0.06 0.18 c-0.02 0.22 -0.12 0.32 -0.34 0.32 z M77.22 15.58 l0.66 0 c0.36 -0.02 0.7 -0.06 1.04 -0.12 c0.38 -0.04 0.72 -0.1 1.04 -0.18 c0.06 -0.06 0.14 -0.12 0.22 -0.16 c0.04 -0.02 0.08 -0.02 0.12 -0.04 s0.08 -0.02 0.14 -0.04 l0.08 -0.06 l0.08 -0.06 l0.12 -0.12 c0.22 -0.18 0.32 -0.36 0.34 -0.54 s-0.04 -0.38 -0.2 -0.6 l-0.24 -0.36 l-0.32 -0.32 c-0.3 -0.22 -0.66 -0.4 -1.04 -0.5 c-0.18 -0.04 -0.38 -0.08 -0.58 -0.14 c-0.2 -0.04 -0.4 -0.08 -0.58 -0.14 l-0.4 0 c-0.12 0 -0.2 0 -0.22 0.02 l-0.28 0 c-0.1 0.02 -0.14 0.04 -0.16 0.06 c-0.02 0.06 -0.04 0.1 -0.04 0.14 c-0.02 0.04 -0.02 0.14 -0.02 0.28 l0 0.2 c0 0.1 0 0.18 -0.02 0.22 c0.02 0.38 0.02 0.78 0 1.16 c-0.04 0.38 -0.02 0.76 0.04 1.18 l0 0.1 c0.06 0.02 0.14 0.02 0.22 0.02 z M80.78 13.18 l0 -0.02 l-0.02 0 c0 0.02 0 0.02 0.02 0.02 z M76.8 16.3 l0.02 -0.02 l-0.02 0 l0 0.02 z M89.02 20.06 c-1.34 0 -2.72 -0.76 -3.24 -2.02 c-0.06 -0.14 -0.12 -0.3 -0.22 -0.46 c-0.1 -0.14 -0.16 -0.3 -0.18 -0.5 c-0.02 -0.02 -0.04 -0.04 -0.04 -0.06 c-0.2 -0.42 -0.28 -0.84 -0.22 -1.24 c0.04 -0.42 0.1 -0.84 0.2 -1.24 l0.08 -0.32 l0.06 -0.32 c0.02 -0.2 0.12 -0.38 0.32 -0.56 c0.1 -0.3 0.32 -0.56 0.62 -0.78 c0.02 -0.04 0.06 -0.08 0.1 -0.12 l0.12 -0.12 c0.08 -0.06 0.16 -0.14 0.22 -0.22 c0.06 -0.1 0.14 -0.18 0.22 -0.24 c0.06 -0.06 0.16 -0.08 0.28 -0.08 l0.04 0 c0.34 -0.22 0.68 -0.38 1 -0.46 c0.32 -0.06 0.68 -0.1 1.08 -0.1 c0.1 0 0.16 0 0.2 0.02 l0.14 0 c1.2 0.12 2.04 0.6 2.64 1.66 c0.3 0.46 0.5 0.96 0.56 1.5 s0.06 1.08 0 1.64 l0 0.16 c0 0.06 0 0.1 0.02 0.16 c0 0.12 -0.06 0.22 -0.16 0.3 l0 0.08 c0 0.1 0 0.18 0.02 0.22 c0 0.08 -0.04 0.16 -0.1 0.22 c-0.02 0.02 -0.02 0.06 -0.04 0.1 s-0.02 0.08 -0.04 0.1 c-0.06 0.1 -0.08 0.18 -0.1 0.24 c-0.06 0.12 -0.12 0.24 -0.16 0.36 c-0.06 0.14 -0.14 0.24 -0.26 0.34 l-0.1 0.16 c0 0.1 -0.02 0.16 -0.06 0.18 c-0.08 0.06 -0.14 0.08 -0.18 0.1 s-0.08 0.06 -0.14 0.12 c-0.02 0.04 -0.08 0.1 -0.14 0.16 c-0.74 0.6 -1.38 1 -2.36 1 c-0.04 0.02 -0.1 0.02 -0.18 0.02 z M88.94 19.18 l0.16 0 c0.08 0 0.16 0 0.24 -0.02 c0.16 0 0.32 -0.02 0.48 -0.06 l0.24 0 l0.66 -0.36 c0.22 -0.14 0.42 -0.28 0.58 -0.42 l0.02 0 l-0.04 -0.04 c0.02 -0.14 0.08 -0.26 0.2 -0.4 c0.1 -0.1 0.18 -0.22 0.24 -0.36 c0.34 -0.62 0.58 -1.4 0.62 -2.1 c0.02 -0.38 0 -0.72 -0.08 -1.04 c-0.1 -0.38 -0.36 -1.06 -0.66 -1.36 c-0.06 -0.04 -0.1 -0.08 -0.14 -0.12 l-0.14 -0.14 c-0.08 -0.06 -0.14 -0.1 -0.18 -0.14 c-0.06 -0.04 -0.1 -0.12 -0.1 -0.22 c0 -0.02 0 -0.02 0.02 -0.02 l-0.02 0 c-0.52 -0.28 -1.04 -0.42 -1.54 -0.42 c-0.28 0 -0.58 0.04 -0.88 0.1 c-0.3 0.08 -0.58 0.18 -0.84 0.32 c-0.02 0.02 -0.04 0.02 -0.06 0.02 c-0.04 0 -0.1 0.04 -0.1 0.08 c0 0.02 0 0.02 -0.02 0.04 c-0.06 0.04 -0.1 0.08 -0.14 0.12 l-0.16 0.16 c-0.12 0.12 -0.24 0.18 -0.36 0.2 c-0.44 0.52 -0.56 1.18 -0.68 1.84 l0 0.18 c-0.02 0.06 -0.04 0.1 -0.1 0.16 c-0.02 0.06 0 0.12 0.04 0.18 c0.02 0.06 0.02 0.1 -0.04 0.16 l0 0.08 c0.04 0.04 0.08 0.12 0.1 0.22 c0 0.1 0 0.18 -0.02 0.22 c0.02 0.06 0.02 0.1 0.02 0.14 c0 0.06 0 0.1 0.02 0.16 s0.02 0.1 0.02 0.16 s0 0.1 0.02 0.16 c0.06 0.1 0.08 0.18 0.1 0.24 l0.06 0.08 l0.06 0.08 c0.02 0.08 0.04 0.16 0.04 0.22 l0.02 0 c0.1 0.18 0.2 0.32 0.34 0.5 l0.36 0.54 c0.22 0.22 0.48 0.4 0.76 0.54 c0.24 0.14 0.54 0.26 0.88 0.32 z M97.17999999999999 20.14 c-0.18 0 -0.34 -0.04 -0.52 -0.1 c-0.18 -0.08 -0.36 -0.18 -0.52 -0.32 c-0.28 -0.2 -0.56 -0.58 -0.6 -0.94 c-0.02 -0.18 0.02 -0.3 0.14 -0.36 c0.02 -0.02 0.04 -0.02 0.1 -0.02 c0.1 0 0.16 0.04 0.2 0.14 c0.1 0.18 0.32 0.5 0.5 0.62 c0.18 0.14 0.4 0.22 0.7 0.22 c0.98 0 1.32 -1.38 1.32 -2.16 l0 -0.34 c0 -0.1 0 -0.18 0.02 -0.24 c0.06 -0.98 0.1 -1.98 0.1 -2.98 c-0.02 -0.32 -0.02 -0.64 -0.04 -0.98 l0 -0.28 c0 -0.1 0 -0.2 -0.02 -0.3 c-0.02 -0.18 0.02 -0.38 0.12 -0.56 c0.02 -0.3 0.14 -0.44 0.38 -0.44 l0.18 0 c0.06 0.02 0.1 0.06 0.12 0.12 c0.06 0.12 0.08 0.24 0.1 0.36 l0 0.28 c0.06 0.34 0.1 0.68 0.12 1.02 c0 1.5 -0.02 2.98 -0.18 4.46 c-0.04 1.22 -0.4 2.16 -1.56 2.68 c-0.22 0.08 -0.44 0.12 -0.66 0.12 z M98.61999999999999 17.240000000000002 c0 -0.02 0 -0.02 -0.02 -0.02 z M97.46 19.4 l0.02 0 l-0.04 -0.04 c0.02 0.02 0.02 0.02 0.02 0.04 z M105.74 20.1 c-0.66 0 -1.34 -0.02 -2 -0.06 c-0.1 0 -0.2 -0.02 -0.28 -0.06 c-0.1 -0.04 -0.16 -0.12 -0.18 -0.26 c-0.02 -0.02 -0.02 -0.08 -0.02 -0.18 c-0.06 -0.38 -0.1 -0.72 -0.1 -1.02 c-0.02 -0.34 -0.02 -0.68 0 -1.02 c0.02 -0.06 0.02 -0.16 0.02 -0.3 l0 -0.28 c-0.1 -0.1 -0.12 -0.22 -0.1 -0.32 c0.02 -0.06 0.02 -0.1 0.02 -0.16 s0 -0.1 0.02 -0.16 c-0.02 -0.42 -0.02 -0.84 0 -1.26 l0 -0.62 c0 -0.2 0 -0.4 0.02 -0.62 l0 -0.24 c-0.04 -0.06 -0.06 -0.14 -0.06 -0.2 c0 -0.04 0.02 -0.12 0.04 -0.22 c0.02 -0.02 0.02 -0.06 0.04 -0.1 c0 -0.04 0 -0.08 0.02 -0.1 c0.02 -0.06 0.02 -0.14 0 -0.2 l0 -0.08 c0 -0.1 0 -0.18 -0.02 -0.24 s0.02 -0.14 0.08 -0.2 c0.08 -0.58 0.36 -0.72 0.92 -0.72 c0.56 -0.06 1.12 -0.1 1.68 -0.1 l1.34 0 c0.08 0 0.16 0 0.26 0.02 c0.08 0 0.18 0.02 0.32 0.04 l0.16 0.04 l0.16 0.04 c0.22 0.04 0.3 0.16 0.26 0.34 c-0.02 0.12 -0.06 0.18 -0.12 0.2 c-0.12 0.08 -0.4 0.1 -0.54 0.1 c-0.06 0.02 -0.16 0.02 -0.3 0.02 c-0.22 0.02 -0.42 0.02 -0.64 0.02 c-0.22 0.02 -0.42 0.02 -0.64 0.02 l-0.64 0 c-0.22 0 -0.42 0 -0.64 0.02 l-0.6 0 c-0.08 0 -0.16 0 -0.22 0.02 l0 0.54 c0 0.06 0 0.12 -0.02 0.18 c-0.02 0.26 -0.02 0.5 0 0.76 c0.02 0.14 0.02 0.26 0.02 0.4 l-0.04 0.4 c0 0.08 0 0.14 0.02 0.16 c0.06 0.06 0.08 0.16 0.08 0.26 l-0.06 0.3 c-0.02 0.14 0 0.24 0.06 0.28 c0.06 0.06 0.14 0.08 0.24 0.08 l0.08 0 c0.12 -0.02 0.24 -0.02 0.36 -0.04 s0.24 -0.02 0.36 -0.04 c0.1 -0.02 0.22 -0.02 0.34 -0.04 l0.36 0 c0.34 0 0.64 0.02 0.9 0.08 c0.08 0.02 0.14 0.1 0.16 0.24 s-0.02 0.22 -0.1 0.26 c-0.36 0.2 -0.94 0.22 -1.34 0.22 l-1.26 0 c-0.02 0.02 -0.06 0.02 -0.08 0.02 c-0.02 0.02 -0.06 0.02 -0.08 0.04 c0 1 0 1.96 -0.04 2.96 l0.96 0 c0.14 0.02 0.3 0.02 0.46 0.02 l0.46 0 c0.28 -0.04 0.56 -0.08 0.86 -0.08 l0.28 0 c0.18 0 0.38 0.02 0.56 0.06 l0.58 0.1 c0.1 0.04 0.12 0.14 0.1 0.28 c-0.04 0.24 -0.3 0.26 -0.5 0.26 c-0.66 0.12 -1.32 0.14 -1.98 0.14 z M103.82 12.24 l0.02 -0.02 l-0.02 0 l0 0.02 z M114.62 20.02 c-0.1 0 -0.22 0 -0.4 -0.04 c-0.32 -0.04 -1.16 -0.14 -1.3 -0.42 c-0.54 -0.26 -0.96 -0.64 -1.22 -1.16 c-0.1 -0.08 -0.16 -0.18 -0.18 -0.32 c-0.3 -0.44 -0.5 -0.9 -0.6 -1.4 c-0.1 -0.48 -0.1 -0.98 -0.02 -1.52 l0.04 -0.22 c0.02 -0.36 0.1 -0.7 0.28 -1.02 c0.14 -0.3 0.32 -0.58 0.56 -0.86 c0.72 -0.96 2.06 -1.48 3.22 -1.48 c0.36 0 0.56 0 0.9 0.16 c0.22 0 0.24 0 0.4 0.16 c0.2 0.02 0.38 0.08 0.52 0.22 l0.2 0.2 l0.2 0.2 c0.08 0.06 0.08 0.14 0 0.22 c-0.06 0.06 -0.12 0.08 -0.22 0.08 c-0.02 0 -0.04 0 -0.06 -0.02 l-0.06 0 c-0.12 -0.02 -0.22 -0.08 -0.3 -0.18 c-0.1 -0.1 -0.22 -0.16 -0.34 -0.18 c-0.32 -0.14 -0.68 -0.22 -1.08 -0.22 c-0.32 0 -0.68 0.06 -1.08 0.16 c-1 0.48 -1.74 1.14 -2.06 2.24 c-0.02 0.14 -0.08 0.26 -0.16 0.32 l-0.06 1.7 c0 0.16 0.02 0.3 0.08 0.42 c0.32 1.1 1 2.04 2.18 2.28 c0.06 0.02 0.14 0.02 0.2 0.02 c0.12 0.04 0.28 0.06 0.4 0.06 c1 0 1.64 -0.28 2.36 -1 c0.06 -0.04 0.12 -0.08 0.18 -0.14 c0.04 -0.04 0.22 -0.2 0.26 -0.2 s0.08 0.02 0.12 0.06 c0.14 0.14 0.14 0.28 -0.02 0.44 l-0.22 0.22 c-0.08 0.08 -0.16 0.16 -0.22 0.24 c-0.32 0.36 -0.72 0.56 -1.16 0.72 c-0.4 0.18 -0.9 0.26 -1.34 0.26 z M112.5 13.08 c0 -0.02 0 -0.02 0.02 -0.02 l-0.02 0 l0 0.02 z M128 11.72 c0.12 0.12 0.16 0.2 0.12 0.26 c-0.06 0.08 -0.14 0.12 -0.26 0.14 c-0.04 0.02 -0.1 0.02 -0.18 0.02 l-0.18 0 l-2.24 0.12 c-0.1 0 -0.18 -0.04 -0.24 -0.1 l0.04 -0.04 l-0.02 0 c-0.02 0 -0.02 0.02 -0.02 0.04 c-0.32 0.02 -0.48 0.18 -0.46 0.52 c0.06 0.36 0.06 0.74 0.02 1.12 c-0.02 0.18 -0.04 0.38 -0.04 0.56 c-0.02 0.2 -0.02 0.4 0 0.58 c0.02 0.38 0.02 0.74 0.04 1.1 s0.02 0.72 0.04 1.08 s0.02 0.72 0 1.08 s-0.06 0.72 -0.08 1.1 l0 0.24 c-0.02 0.06 -0.02 0.16 -0.02 0.26 c0 0.22 -0.16 0.24 -0.34 0.24 l-0.18 -0.06 c-0.06 -0.02 -0.1 -0.08 -0.12 -0.2 c0 -0.34 0 -0.68 -0.02 -1.02 l-0.06 -1.02 c-0.02 -0.34 -0.04 -0.7 -0.02 -1.04 c0 -0.34 0.02 -0.68 0.04 -1.02 c0.02 -0.06 0.02 -0.14 0.04 -0.22 l0 -0.2 c-0.02 -0.06 -0.02 -0.14 -0.02 -0.22 l0 -1.44 c0 -0.4 0.02 -0.8 0.04 -1.2 c-0.18 -0.1 -0.36 -0.14 -0.58 -0.14 c-0.24 0 -0.46 0.02 -0.66 0.06 l-1.02 0.06 c-0.18 0.02 -0.34 0.02 -0.52 0.02 l-0.52 0 c-0.18 0 -0.32 -0.08 -0.38 -0.24 c-0.06 -0.18 0 -0.3 0.2 -0.36 c0.1 -0.06 0.22 -0.1 0.36 -0.1 l0.2 0 c0.04 0.02 0.1 0.02 0.2 0.02 c0.16 -0.06 0.34 -0.1 0.52 -0.1 l0.16 0 c0.06 0 0.1 0 0.16 0.02 s0.1 0.02 0.16 0.02 l0.16 0 c0.06 -0.08 0.14 -0.12 0.24 -0.12 l0.1 0 c0.02 0.02 0.04 0.02 0.08 0.02 l2.34 0 c0.26 0 0.54 0 0.8 -0.02 l0.78 -0.06 l0.24 0 c0.42 0 0.72 0.02 1.1 0.24 z M132.32000000000002 20 c-0.16 0 -0.44 -0.14 -0.44 -0.32 l0 -0.2 c0 -0.06 0 -0.12 0.02 -0.18 c-0.08 -0.34 -0.12 -0.7 -0.12 -1.06 c-0.02 -0.18 -0.02 -0.34 -0.02 -0.52 l0 -2.04 c-0.02 -0.26 -0.02 -0.5 -0.04 -0.76 l-0.06 -0.74 c-0.02 -0.18 -0.02 -0.34 -0.02 -0.52 c0 -0.52 0.02 -1 0.1 -1.52 c-0.06 -0.04 -0.06 -0.08 0 -0.1 c0 -0.2 0.08 -0.38 0.24 -0.56 c0.06 -0.08 0.14 -0.12 0.22 -0.12 c0.14 0 0.28 0.1 0.38 0.28 c0.02 0.06 0.02 0.1 0.04 0.14 s0.02 0.08 0.04 0.1 l0 0.82 c0.06 0.06 0.06 0.12 0 0.18 c-0.02 0.1 -0.02 0.22 0 0.32 c0 0.14 -0.02 0.24 -0.08 0.34 c-0.02 0.06 -0.02 0.12 0 0.18 c0 0.06 0 0.14 0.02 0.2 c0.02 0.1 -0.02 0.22 -0.08 0.36 c0.06 0.54 0.08 1.06 0.06 1.6 s-0.02 1.06 0 1.6 l0 0.18 c0 0.06 0 0.14 0.02 0.2 s0.02 0.12 0.02 0.18 c-0.02 0.06 -0.02 0.12 -0.04 0.18 c0.06 0.26 0.08 0.52 0.06 0.78 c-0.02 0.14 -0.02 0.26 -0.04 0.38 s-0.02 0.24 -0.04 0.38 c-0.02 0.16 -0.1 0.24 -0.24 0.24 z M140.12 20.06 c-1.34 0 -2.72 -0.76 -3.24 -2.02 c-0.06 -0.14 -0.12 -0.3 -0.22 -0.46 c-0.1 -0.14 -0.16 -0.3 -0.18 -0.5 c-0.02 -0.02 -0.04 -0.04 -0.04 -0.06 c-0.2 -0.42 -0.28 -0.84 -0.22 -1.24 c0.04 -0.42 0.1 -0.84 0.2 -1.24 l0.08 -0.32 l0.06 -0.32 c0.02 -0.2 0.12 -0.38 0.32 -0.56 c0.1 -0.3 0.32 -0.56 0.62 -0.78 c0.02 -0.04 0.06 -0.08 0.1 -0.12 l0.12 -0.12 c0.08 -0.06 0.16 -0.14 0.22 -0.22 c0.06 -0.1 0.14 -0.18 0.22 -0.24 c0.06 -0.06 0.16 -0.08 0.28 -0.08 l0.04 0 c0.34 -0.22 0.68 -0.38 1 -0.46 c0.32 -0.06 0.68 -0.1 1.08 -0.1 c0.1 0 0.16 0 0.2 0.02 l0.14 0 c1.2 0.12 2.04 0.6 2.64 1.66 c0.3 0.46 0.5 0.96 0.56 1.5 s0.06 1.08 0 1.64 l0 0.16 c0 0.06 0 0.1 0.02 0.16 c0 0.12 -0.06 0.22 -0.16 0.3 l0 0.08 c0 0.1 0 0.18 0.02 0.22 c0 0.08 -0.04 0.16 -0.1 0.22 c-0.02 0.02 -0.02 0.06 -0.04 0.1 s-0.02 0.08 -0.04 0.1 c-0.06 0.1 -0.08 0.18 -0.1 0.24 c-0.06 0.12 -0.12 0.24 -0.16 0.36 c-0.06 0.14 -0.14 0.24 -0.26 0.34 l-0.1 0.16 c0 0.1 -0.02 0.16 -0.06 0.18 c-0.08 0.06 -0.14 0.08 -0.18 0.1 s-0.08 0.06 -0.14 0.12 c-0.02 0.04 -0.08 0.1 -0.14 0.16 c-0.74 0.6 -1.38 1 -2.36 1 c-0.04 0.02 -0.1 0.02 -0.18 0.02 z M140.04000000000002 19.18 l0.16 0 c0.08 0 0.16 0 0.24 -0.02 c0.16 0 0.32 -0.02 0.48 -0.06 l0.24 0 l0.66 -0.36 c0.22 -0.14 0.42 -0.28 0.58 -0.42 l0.02 0 l-0.04 -0.04 c0.02 -0.14 0.08 -0.26 0.2 -0.4 c0.1 -0.1 0.18 -0.22 0.24 -0.36 c0.34 -0.62 0.58 -1.4 0.62 -2.1 c0.02 -0.38 0 -0.72 -0.08 -1.04 c-0.1 -0.38 -0.36 -1.06 -0.66 -1.36 c-0.06 -0.04 -0.1 -0.08 -0.14 -0.12 l-0.14 -0.14 c-0.08 -0.06 -0.14 -0.1 -0.18 -0.14 c-0.06 -0.04 -0.1 -0.12 -0.1 -0.22 c0 -0.02 0 -0.02 0.02 -0.02 l-0.02 0 c-0.52 -0.28 -1.04 -0.42 -1.54 -0.42 c-0.28 0 -0.58 0.04 -0.88 0.1 c-0.3 0.08 -0.58 0.18 -0.84 0.32 c-0.02 0.02 -0.04 0.02 -0.06 0.02 c-0.04 0 -0.1 0.04 -0.1 0.08 c0 0.02 0 0.02 -0.02 0.04 c-0.06 0.04 -0.1 0.08 -0.14 0.12 l-0.16 0.16 c-0.12 0.12 -0.24 0.18 -0.36 0.2 c-0.44 0.52 -0.56 1.18 -0.68 1.84 l0 0.18 c-0.02 0.06 -0.04 0.1 -0.1 0.16 c-0.02 0.06 0 0.12 0.04 0.18 c0.02 0.06 0.02 0.1 -0.04 0.16 l0 0.08 c0.04 0.04 0.08 0.12 0.1 0.22 c0 0.1 0 0.18 -0.02 0.22 c0.02 0.06 0.02 0.1 0.02 0.14 c0 0.06 0 0.1 0.02 0.16 s0.02 0.1 0.02 0.16 s0 0.1 0.02 0.16 c0.06 0.1 0.08 0.18 0.1 0.24 l0.06 0.08 l0.06 0.08 c0.02 0.08 0.04 0.16 0.04 0.22 l0.02 0 c0.1 0.18 0.2 0.32 0.34 0.5 l0.36 0.54 c0.22 0.22 0.48 0.4 0.76 0.54 c0.24 0.14 0.54 0.26 0.88 0.32 z M147.78 20.22 c-0.2 0 -0.26 -0.04 -0.34 -0.22 c-0.12 -0.52 -0.14 -1.12 -0.14 -1.64 c-0.02 -0.26 -0.02 -0.5 -0.02 -0.74 s0 -0.48 -0.02 -0.74 l-0.06 -1.52 l-0.06 -1.5 c-0.02 -0.52 -0.02 -1.04 0 -1.54 c0 -0.14 0.02 -0.3 0.06 -0.5 c0.02 -0.18 0.14 -0.3 0.32 -0.32 c0.18 0.14 0.36 0.32 0.5 0.54 s0.28 0.38 0.42 0.52 s0.26 0.3 0.36 0.52 c0.12 0.16 0.26 0.32 0.4 0.46 l0.2 0.24 l0.2 0.24 l0.12 0.12 c0.04 0.04 0.08 0.08 0.14 0.12 c0.1 0.1 0.14 0.2 0.16 0.32 c0.1 0.06 0.18 0.14 0.24 0.2 l0.18 0.22 l0.18 0.16 c0.04 0.06 0.08 0.12 0.14 0.18 l0.12 0.2 l0.12 0.2 c0.02 0.02 0.02 0.04 0.02 0.08 l0.08 0.06 c0.22 0.18 0.44 0.38 0.62 0.6 c0.28 0.4 0.62 0.8 0.98 1.16 c0.14 0.18 0.32 0.4 0.48 0.56 c0 -0.38 -0.04 -0.72 -0.08 -1.1 c-0.02 -0.26 -0.02 -0.54 0 -0.8 c0.02 -0.14 0.02 -0.26 0.02 -0.4 l-0.04 -0.4 c0 -0.06 0.02 -0.12 0.08 -0.18 c0.02 -0.14 0.02 -0.3 0 -0.46 s0 -0.3 0.08 -0.44 l0 -1.22 c0 -0.18 0 -0.36 0.02 -0.56 c0 -0.2 0.02 -0.38 0.04 -0.56 l0.06 -0.48 c0 -0.22 0.12 -0.32 0.36 -0.32 c0.22 0 0.36 0.12 0.38 0.34 l0.06 0.6 c0 0.22 0 0.46 -0.02 0.72 c-0.06 0.7 -0.1 1.42 -0.1 2.12 c-0.04 0.52 -0.06 1.06 -0.06 1.6 l0 0.82 c0 0.06 0 0.14 0.02 0.22 c0 0.1 0 0.2 0.02 0.3 s0.02 0.22 0.02 0.34 l0 0.34 l0 0.34 c-0.02 0.1 -0.02 0.2 -0.04 0.3 c-0.04 0.18 -0.12 0.32 -0.22 0.4 c-0.06 0.04 -0.1 0.06 -0.16 0.06 c-0.22 0 -1.2 -1.06 -1.34 -1.24 c-0.18 -0.18 -0.26 -0.28 -0.28 -0.32 c-0.4 -0.32 -0.74 -0.7 -1 -1.16 c-0.08 -0.02 -0.12 -0.06 -0.14 -0.1 c-0.06 -0.06 -0.08 -0.1 -0.1 -0.14 c-0.14 -0.1 -0.26 -0.22 -0.36 -0.36 c-0.06 -0.06 -0.1 -0.14 -0.14 -0.2 c-0.06 -0.06 -0.1 -0.14 -0.16 -0.2 c-0.14 -0.22 -0.3 -0.44 -0.48 -0.62 c-0.18 -0.16 -0.36 -0.36 -0.5 -0.6 c-0.02 -0.04 -0.06 -0.08 -0.1 -0.12 s-0.08 -0.08 -0.1 -0.12 c-0.06 -0.08 -0.12 -0.16 -0.14 -0.26 l-0.12 -0.12 c-0.06 -0.06 -0.1 -0.1 -0.12 -0.14 c-0.02 -0.02 -0.04 -0.06 -0.06 -0.1 s-0.04 -0.08 -0.06 -0.1 c-0.04 -0.06 -0.08 -0.1 -0.1 -0.14 c-0.04 -0.1 -0.12 -0.16 -0.22 -0.16 c-0.04 0 -0.06 0.06 -0.06 0.2 c0.02 0.06 0.02 0.14 0.02 0.22 l0 0.22 c-0.02 0.06 -0.02 0.14 -0.02 0.22 l0 0.22 l0 0.72 c0 0.24 0 0.48 0.02 0.72 l0 1.46 c0.02 0.22 0.06 0.42 0.08 0.6 c0.02 0.2 0.02 0.4 0.02 0.58 c-0.02 0.38 -0.06 0.78 -0.12 1.22 c-0.02 0.14 -0.12 0.24 -0.26 0.26 z\"></path></g><g id=\"SvgjsG7102\" featurekey=\"mlRtrp-0\" transform=\"matrix(0.456771212399217,0,0,0.456771212399217,59.04091749717398,30.149656043065548)\" fill={secondaryColor}><path d=\"M5.7227 20 l-3.623 0 l0 -13.418 l9.082 0 c0.97656 0 1.805 0.10091 2.4854 0.30273 s1.2337 0.48828 1.6602 0.85938 s0.73568 0.81868 0.92774 1.3428 s0.28809 1.1084 0.28809 1.7529 c0 0.56641 -0.079756 1.0612 -0.23926 1.4844 s-0.37435 0.78613 -0.64453 1.0889 s-0.58432 0.55827 -0.94239 0.7666 s-0.73568 0.38086 -1.1328 0.51758 l4.3945 5.3027 l-4.2383 0 l-4.0625 -4.9414 l-3.9551 0 l0 4.9414 z M12.881 10.8203 c0 -0.26042 -0.03418 -0.48174 -0.10254 -0.66403 s-0.18718 -0.33041 -0.35645 -0.44435 s-0.39551 -0.19694 -0.67871 -0.24902 s-0.6364 -0.078125 -1.0596 -0.078125 l-4.9609 0 l0 2.8711 l4.9609 0 c0.42317 0 0.77637 -0.026045 1.0596 -0.078125 s0.50944 -0.13509 0.67871 -0.24902 s0.28809 -0.26205 0.35645 -0.44435 s0.10254 -0.40365 0.10254 -0.66407 z M54.593859375 13.300799999999999 c0 1.1523 -0.21159 2.1696 -0.63477 3.0518 s-1.0286 1.6194 -1.8164 2.2119 s-1.7432 1.04 -2.8662 1.3428 s-2.3845 0.4541 -3.7842 0.4541 s-2.6644 -0.15137 -3.7939 -0.4541 s-2.0915 -0.75032 -2.8857 -1.3428 s-1.4063 -1.3298 -1.8359 -2.2119 s-0.64453 -1.8994 -0.64453 -3.0518 s0.21484 -2.1696 0.64453 -3.0518 s1.0417 -1.6194 1.8359 -2.2119 s1.7562 -1.04 2.8857 -1.3428 s2.3942 -0.4541 3.7939 -0.4541 s2.6611 0.15137 3.7842 0.4541 s2.0784 0.75032 2.8662 1.3428 s1.3933 1.3298 1.8164 2.2119 s0.63477 1.8994 0.63477 3.0518 z M50.931859375 13.300799999999999 c0 -0.5013 -0.079756 -1.001 -0.23926 -1.499 s-0.44271 -0.94563 -0.84961 -1.3428 s-0.96191 -0.7194 -1.665 -0.9668 s-1.5983 -0.37109 -2.6855 -0.37109 c-0.72917 0 -1.3704 0.056963 -1.9238 0.1709 s-1.0319 0.27182 -1.4355 0.47364 s-0.74219 0.43783 -1.0156 0.70802 s-0.49153 0.5599 -0.6543 0.86915 s-0.27832 0.63151 -0.34668 0.9668 s-0.10254 0.66568 -0.10254 0.99121 c0 0.33203 0.03418 0.66731 0.10254 1.0059 s0.18392 0.66244 0.34668 0.97169 s0.38086 0.59733 0.6543 0.86426 s0.61198 0.49967 1.0156 0.69823 s0.88216 0.35481 1.4355 0.46875 s1.1946 0.1709 1.9238 0.1709 c1.0872 0 1.9824 -0.1237 2.6855 -0.37109 s1.2581 -0.56966 1.665 -0.9668 s0.69011 -0.84473 0.84961 -1.3428 s0.23926 -0.99775 0.23926 -1.499 z M74.646475 20 l0 -13.418 l3.623 0 l0 13.418 l-3.623 0 z M138.277578125 19.08203 c-0.46875 0.19531 -0.94076 0.37102 -1.416 0.52727 s-0.9668 0.29134 -1.4746 0.40527 s-1.0433 0.2002 -1.6064 0.25879 s-1.167 0.087891 -1.8115 0.087891 c-1.3672 0 -2.6253 -0.14648 -3.7744 -0.43945 s-2.1387 -0.73405 -2.9688 -1.3232 s-1.4763 -1.3249 -1.9385 -2.207 s-0.69336 -1.9124 -0.69336 -3.0908 s0.23112 -2.2087 0.69336 -3.0908 s1.1084 -1.6179 1.9385 -2.207 s1.8196 -1.0303 2.9688 -1.3232 s2.4072 -0.43945 3.7744 -0.43945 c0.64453 0 1.2483 0.029297 1.8115 0.087891 s1.0986 0.14485 1.6064 0.25879 s0.99932 0.24902 1.4746 0.40527 s0.94727 0.33203 1.416 0.52734 l0 3.2617 c-0.37109 -0.20183 -0.76172 -0.40202 -1.1719 -0.60059 s-0.86263 -0.3776 -1.3574 -0.5371 s-1.0384 -0.28971 -1.6309 -0.39062 s-1.2598 -0.15137 -2.002 -0.15137 c-1.1394 0 -2.085 0.11719 -2.8369 0.35156 s-1.3525 0.54688 -1.8018 0.9375 s-0.76497 0.83821 -0.94727 1.3428 s-0.27344 1.0271 -0.27344 1.5674 c0 0.35808 0.039063 0.71127 0.11719 1.0596 s0.20833 0.67709 0.39063 0.98633 s0.41992 0.59408 0.71289 0.8545 s0.65755 0.48503 1.0938 0.67383 s0.94564 0.33691 1.5283 0.44434 s1.2549 0.16113 2.0166 0.16113 c0.74219 0 1.4095 -0.047197 2.002 -0.1416 s1.136 -0.21973 1.6309 -0.37598 s0.94727 -0.33366 1.3574 -0.53223 s0.80078 -0.40201 1.1719 -0.61034 l0 3.2617 l0 0 z M169.18959375 17.4609 l-7.4805 0 l-1.2598 2.5391 l-4.043 0 l7.0215 -13.418 l4.043 0 l7.0215 13.418 l-4.043 0 z M163.00779375 14.8437 l4.9023 0 l-2.4414 -4.9414 z M193.441396875 20 l0 -13.418 l3.623 0 l0 10.479 l9.7949 0 l0 2.9395 l-13.418 0 z M241.297109375 19.08203 c-0.46875 0.19531 -0.94076 0.37102 -1.416 0.52727 s-0.9668 0.29134 -1.4746 0.40527 s-1.0433 0.2002 -1.6064 0.25879 s-1.167 0.087891 -1.8115 0.087891 c-1.3672 0 -2.6253 -0.14648 -3.7744 -0.43945 s-2.1387 -0.73405 -2.9688 -1.3232 s-1.4763 -1.3249 -1.9385 -2.207 s-0.69336 -1.9124 -0.69336 -3.0908 s0.23112 -2.2087 0.69336 -3.0908 s1.1084 -1.6179 1.9385 -2.207 s1.8196 -1.0303 2.9688 -1.3232 s2.4072 -0.43945 3.7744 -0.43945 c0.64453 0 1.2483 0.029297 1.8115 0.087891 s1.0986 0.14485 1.6064 0.25879 s0.99932 0.24902 1.4746 0.40527 s0.94727 0.33203 1.416 0.52734 l0 3.2617 c-0.37109 -0.20183 -0.76172 -0.40202 -1.1719 -0.60059 s-0.86263 -0.3776 -1.3574 -0.5371 s-1.0384 -0.28971 -1.6309 -0.39062 s-1.2598 -0.15137 -2.002 -0.15137 c-1.1394 0 -2.085 0.11719 -2.8369 0.35156 s-1.3525 0.54688 -1.8018 0.9375 s-0.76497 0.83821 -0.94727 1.3428 s-0.27344 1.0271 -0.27344 1.5674 c0 0.35808 0.039063 0.71127 0.11719 1.0596 s0.20833 0.67709 0.39063 0.98633 s0.41992 0.59408 0.71289 0.8545 s0.65755 0.48503 1.0938 0.67383 s0.94564 0.33691 1.5283 0.44434 s1.2549 0.16113 2.0166 0.16113 c0.74219 0 1.4095 -0.047197 2.002 -0.1416 s1.136 -0.21973 1.6309 -0.37598 s0.94727 -0.33366 1.3574 -0.53223 s0.80078 -0.40201 1.1719 -0.61034 l0 3.2617 l0 0 z M277.267125 15.4785 c0 0.67058 -0.16599 1.3021 -0.49802 1.8945 s-0.83008 1.1101 -1.4941 1.5527 s-1.4925 0.79264 -2.4854 1.0498 s-2.1533 0.38574 -3.4814 0.38574 s-2.4919 -0.12858 -3.4912 -0.38574 s-1.8311 -0.60709 -2.4951 -1.0498 s-1.1621 -0.96028 -1.4941 -1.5527 s-0.49805 -1.2239 -0.49805 -1.8945 l0 -8.8965 l3.6133 0 l0 7.5977 c0 0.44922 0.056963 0.87402 0.1709 1.2744 s0.32878 0.75032 0.64453 1.0498 s0.75846 0.53711 1.3281 0.71289 s1.3103 0.26367 2.2217 0.26367 c0.90495 0 1.6406 -0.087891 2.207 -0.26367 s1.0075 -0.41341 1.3232 -0.71289 s0.52896 -0.64941 0.63964 -1.0498 s0.16602 -0.8252 0.16602 -1.2744 l0 -7.5977 l3.623 0 l0 8.8965 l0 0 z M298.121084375 20 l0 -13.418 l3.623 0 l0 10.479 l9.7949 0 l0 2.9395 l-13.418 0 z M341.972796875 17.4609 l-7.4805 0 l-1.2598 2.5391 l-4.043 0 l7.0215 -13.418 l4.043 0 l7.0215 13.418 l-4.043 0 z M335.790996875 14.8437 l4.9023 0 l-2.4414 -4.9414 z M373.7441 9.502 l0 10.498 l-3.623 0 l0 -10.498 l-5.6934 0 l0 -2.9199 l15.02 0 l0 2.9199 l-5.7031 0 z M398.5917875 20 l0 -13.418 l3.623 0 l0 13.418 l-3.623 0 z M440.52940625 13.300799999999999 c0 1.1523 -0.21159 2.1696 -0.63477 3.0518 s-1.0286 1.6194 -1.8164 2.2119 s-1.7432 1.04 -2.8662 1.3428 s-2.3845 0.4541 -3.7842 0.4541 s-2.6644 -0.15137 -3.7939 -0.4541 s-2.0915 -0.75032 -2.8857 -1.3428 s-1.4063 -1.3298 -1.8359 -2.2119 s-0.64453 -1.8994 -0.64453 -3.0518 s0.21484 -2.1696 0.64453 -3.0518 s1.0417 -1.6194 1.8359 -2.2119 s1.7562 -1.04 2.8857 -1.3428 s2.3942 -0.4541 3.7939 -0.4541 s2.6611 0.15137 3.7842 0.4541 s2.0784 0.75032 2.8662 1.3428 s1.3933 1.3298 1.8164 2.2119 s0.63477 1.8994 0.63477 3.0518 z M436.86740625 13.300799999999999 c0 -0.5013 -0.079756 -1.001 -0.23926 -1.499 s-0.44271 -0.94563 -0.84961 -1.3428 s-0.96191 -0.7194 -1.665 -0.9668 s-1.5983 -0.37109 -2.6855 -0.37109 c-0.72917 0 -1.3704 0.056963 -1.9238 0.1709 s-1.0319 0.27182 -1.4355 0.47364 s-0.74219 0.43783 -1.0156 0.70802 s-0.49153 0.5599 -0.6543 0.86915 s-0.27832 0.63151 -0.34668 0.9668 s-0.10254 0.66568 -0.10254 0.99121 c0 0.33203 0.03418 0.66731 0.10254 1.0059 s0.18392 0.66244 0.34668 0.97169 s0.38086 0.59733 0.6543 0.86426 s0.61198 0.49967 1.0156 0.69823 s0.88216 0.35481 1.4355 0.46875 s1.1946 0.1709 1.9238 0.1709 c1.0872 0 1.9824 -0.1237 2.6855 -0.37109 s1.2581 -0.56966 1.665 -0.9668 s0.69011 -0.84473 0.84961 -1.3428 s0.23926 -0.99775 0.23926 -1.499 z M473.257421875 20 l-9.0527 -9.2188 l0 9.2188 l-3.623 0 l0 -13.418 l3.9355 0 l9.0625 9.2578 l0 -9.2578 l3.6035 0 l0 13.418 l-3.9258 0 z M510.49815625 10.3613 c-0.25391 -0.1237 -0.58916 -0.26372 -1.0059 -0.41997 s-0.88867 -0.30437 -1.416 -0.44434 s-1.1003 -0.25716 -1.7188 -0.35156 s-1.2532 -0.1416 -1.9043 -0.1416 c-0.52083 0 -0.96517 0.016279 -1.333 0.048828 s-0.67709 0.074863 -0.92774 0.12694 s-0.44922 0.1123 -0.5957 0.18066 s-0.25879 0.13835 -0.33691 0.20996 s-0.12858 0.14322 -0.15137 0.21483 s-0.03418 0.13672 -0.03418 0.19531 c0 0.19531 0.097656 0.36621 0.29297 0.5127 s0.46224 0.27669 0.80078 0.39063 s0.73242 0.22136 1.1816 0.32227 s0.9261 0.20508 1.4307 0.3125 s1.0254 0.22461 1.5625 0.35156 s1.0579 0.27507 1.5625 0.44434 s0.98145 0.36621 1.4307 0.59082 s0.8431 0.48665 1.1816 0.78613 s0.60547 0.64453 0.80078 1.0352 s0.29297 0.83659 0.29297 1.3379 c0 0.64453 -0.11394 1.1979 -0.3418 1.6602 s-0.53223 0.85286 -0.91309 1.1719 s-0.82194 0.57455 -1.3232 0.76661 s-1.0271 0.34018 -1.5771 0.44435 s-1.1067 0.17253 -1.6699 0.20508 s-1.0986 0.048828 -1.6064 0.048828 c-1.3281 0 -2.5569 -0.10905 -3.6865 -0.32715 s-2.1272 -0.4899 -2.9932 -0.81542 l0 -3.2031 c0.89192 0.49479 1.9092 0.88217 3.0518 1.1621 s2.3649 0.41992 3.667 0.41992 c0.76823 0 1.3948 -0.040693 1.8799 -0.12207 s0.86426 -0.18555 1.1377 -0.3125 s0.45898 -0.2653 0.55664 -0.41504 s0.14648 -0.29297 0.14648 -0.42969 c0 -0.21484 -0.097656 -0.40202 -0.29297 -0.56152 s-0.46224 -0.29947 -0.80078 -0.41991 s-0.73242 -0.23111 -1.1816 -0.33202 s-0.9261 -0.20182 -1.4307 -0.30272 s-1.0237 -0.20996 -1.5576 -0.32715 s-1.053 -0.25554 -1.5576 -0.41504 s-0.98145 -0.34505 -1.4307 -0.55664 s-0.8431 -0.46225 -1.1816 -0.75196 s-0.60547 -0.625 -0.80078 -1.0059 s-0.29297 -0.82194 -0.29297 -1.3232 c0 -0.59245 0.10417 -1.1035 0.3125 -1.5332 s0.4899 -0.7959 0.84472 -1.0986 s0.76497 -0.54851 1.2305 -0.7373 s0.95541 -0.33528 1.4697 -0.43945 s1.0352 -0.17578 1.5625 -0.21484 s1.0286 -0.058594 1.5039 -0.058594 c0.52083 0 1.0563 0.026045 1.6064 0.078125 s1.0921 0.12532 1.626 0.21973 s1.0498 0.20346 1.5479 0.32716 s0.95866 0.25391 1.3818 0.39063 l0 3.1055 z\"></path></g></svg>\n   </div>\n  );\n}\n\nexport default Logo;","import React from \"react\";\nimport Logo from \"../../../images/Logo\"\n\nconst Header = () => (\n  <div className=\"body-centered\">\n\n    <div className=\"flex-row\">\n      <div className=\"header-left\">\n      <Logo imgColor=\"#54c1f7\"  mainColor=\"#efefef\" secondaryColor=\"#1baef7\" />\n      </div>\n      <div className=\"header-right\">\n        bitcoinprojection.com\n      </div>\n    </div>\n\n    <div className=\"flex-row header-divide\" />\n  </div>\n)\n\nexport default Header;","import React from \"react\";\n\nconst InputInvestment = ({ value, onChange }) => {\n  return (\n\n    <div className=\"form-row margin-bottom-10\">\n      <div>\n        <div className=\"form-label\">Investment Amount: </div>\n      </div>\n      <div>\n        <div className=\"form-value\">\n          <input\n            placeholder=\"ei $20,000\"\n            onChange={e => onChange(e.target.value)}\n            value={value}\n          />\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default InputInvestment;","import React, { useContext, useEffect } from \"react\";\nimport { AppContext } from \"../../../elements/AppContext\";\n\nconst getCryptoName = symbol => {\n  switch (symbol) {\n    case \"eth\":\n      return \"Ethereum\";\n\n    case \"btc\":\n      return \"Bitcoin\";\n\n    case \"bch\":\n      return \"Bitcoin cash\";\n\n    case \"ltc\":\n      return \"Litecoin\";\n\n    case \"bnb\":\n      return \"Binance\"\n\n    default:\n      return \"\"\n  }\n}\n\nconst CryptoList = ({ click }) => {\n  const { currentTicker, historicalTicker } = useContext(AppContext);\n\n  useEffect(() => {\n    console.log(historicalTicker)\n  }, [historicalTicker]);\n\n  const hasHistoricalData = (ticker) => {\n    return historicalTicker && historicalTicker.hasOwnProperty(ticker) && historicalTicker[ticker].hasOwnProperty(\"value\")\n  }\n\n  return (\n    <div>\n      <table className=\"crypto-table\">\n        <tbody>\n          <tr className=\"crypto-table-header\">\n            <td>Crypto</td>\n            <td>Current Price</td>\n            {historicalTicker && <td>Past price</td>}\n          </tr>\n          {\n            Object.keys(currentTicker).map((ticker, i) => {\n              return (\n              <tr key={ticker}>\n                <td className=\"crypto-table-data\">\n                  <span>{getCryptoName(ticker)}</span>\n                </td>\n                <td className=\"crypto-table-link\">\n                <span\n                    onClick={() => click(currentTicker[ticker],\n                      getCryptoName(ticker),\n                      ticker)}>{currentTicker[ticker]}</span>\n                </td>\n                { hasHistoricalData(ticker) && (\n                  <td className=\"crypto-table-link\">\n                    <span\n                      onClick={() => click(historicalTicker[ticker].value,\n                        getCryptoName(ticker),\n                        ticker)}>\n                      {historicalTicker[ticker].value}\n                    </span>\n                  </td>\n                )}\n              </tr>\n              )})}\n        </tbody>\n      </table>\n      <div>\n        { !hasHistoricalData(\"btc\") &&\n        (<div className=\"font-12 padding-5 margin-top-10\">Click on \"Compare with previous date\" to choose an earlier price-point</div>)}\n      </div>\n    </div>\n  );\n};\n\nexport default CryptoList;","import React, { useState, useContext } from \"react\";\nimport CryptoList from \"./CryptoList\";\nimport { CalculatorContext } from \"../Calculator\";\nimport ls from \"local-storage\";\n\nconst InputCrypto = () => {\n  const [showDropdown, setDropdown] = useState();\n  const { \n    setPurchasedPrice, \n    setPurchasedCryptoName, \n    setPurchasedSymbol, \n    purchasedCryptoName,\n    isCopy\n  } = useContext(CalculatorContext);\n  const clickHandler = (price, cryptoName, symbol) => {\n    setDropdown(false);\n    setPurchasedPrice(price);\n    setPurchasedCryptoName(cryptoName)\n    setPurchasedSymbol(symbol)\n    if(!isCopy) {\n      ls.set(\"purchasedPrice\", price)\n      ls.set(\"purchasedName\", cryptoName);\n      ls.set(\"cryptoSymbol\", symbol)\n    }\n    \n  };\n  return (\n    <div className=\"form-row margin-bottom-10\">\n      <div>\n        <div className=\"form-label\">CyptoType: </div>\n      </div>\n      <div>\n        <div className=\"form-value input-container-with-dropdown flex-row-all\">\n          <input\n            placeholder=\"Bitcoin\"\n            onChange={e => setPurchasedCryptoName(e.target.value)}\n            value={purchasedCryptoName || \"\"}\n          />\n          <div\n            className={`dropdown-list-container`}\n            onClick={() => setDropdown(!showDropdown)}\n          >\n            <div className=\"arrow-container\">\n              <div className={showDropdown ? \"arrow-up\" : \"arrow-down\"}>\n                <span>&#9662;</span>\n              </div>\n            </div>\n          </div>\n          <div\n            className={`dropdown-list ${showDropdown ? \"dropdown-list-expanded\" : \"dropdown-list-closed\"}`}>\n            <CryptoList click={clickHandler} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default InputCrypto;","import React, { useContext, useEffect } from \"react\";\nimport { CalculatorContext } from \"../Calculator\";\nimport { AppContext } from \"../../AppContext\";\nimport ls from \"local-storage\";\n\nconst InputCrypto = ({ value }) => {\n  const { purchasedPrice, \n          setPurchasedPrice, \n          useCurrentPrice, \n          setUseCurrentPrice, \n          purchasedSymbol \n        } = useContext(CalculatorContext);\n  const { currentTicker } = useContext(AppContext);\n\n  useEffect( () => {\n    if(useCurrentPrice){\n      setPurchasedPrice(currentTicker[purchasedSymbol])\n    }\n  }, [currentTicker, setPurchasedPrice, purchasedSymbol, useCurrentPrice])\n\n  const updatePurchasedPrice = price => {\n    ls.set(\"purchasedPrice\", price);\n    setPurchasedPrice(price)\n  }\n\n  return (\n    <React.Fragment>\n        <div className=\"form-row\" style={{marginBottom:\"5px\"}}>\n          <div style={{marginTop:\"-5px\"}}>\n            <div className=\"form-label\">\n              <div>Purchase price: </div>\n              <div className=\"form-label-sub\" >\n                <span>update with current price</span>\n                <input type=\"checkbox\" onClick={() => setUseCurrentPrice(!useCurrentPrice)} />\n              </div>\n            </div>\n          </div>\n          <div>\n            <div className=\"form-value input-container-with-dropdown flex-row-all\">\n              <input\n                placeholder=\"$500\"\n                onChange={e => updatePurchasedPrice(e.target.value)}\n                value={purchasedPrice || \"\"}\n              />\n            </div>\n          </div>\n        </div>\n    </React.Fragment>\n  )\n\n}\n\nexport default InputCrypto;","import React, {useContext, useState, useEffect} from \"react\";\nimport { CalculatorContext } from \"../Calculator\";\nimport { AppContext } from \"../../AppContext\";\nimport ls from \"local-storage\";\n\nconst InputSellPrice = () => {\n  const { currentTicker } = useContext(AppContext);\n  const { sellPrice, setSellPrice, purchasedSymbol, isCopy } = useContext(CalculatorContext);\n  const [ useCurrent, setUseCurrent ] = useState();\n\n  useEffect( () => {\n    if(useCurrent && currentTicker ) { \n      console.log(currentTicker[purchasedSymbol]);\n      setSellPrice(currentTicker[purchasedSymbol])\n    }\n  }, [useCurrent, purchasedSymbol, setSellPrice, currentTicker]);\n\n  useEffect(() => {\n    if(!isCopy && ls.get(\"useCurrent\")) {\n      setUseCurrent(true)\n    }\n  },[isCopy]);\n\n  useEffect(() => {\n    if(!isCopy) {\n      if(useCurrent) {\n        ls.set(\"useCurrent\", true);\n      } else {\n        ls.set(\"useCurrent\", false);\n      }\n    }\n  }, [useCurrent, isCopy]);\n\n  return (\n    <React.Fragment>\n        <div className=\"form-row\">\n          <div>\n            <div className=\"form-label\">\n              <div>Sell price: </div>\n              <div className=\"form-label-sub\">\n                <span>update with current price</span>\n                <input \n                  type=\"checkbox\" \n                  checked={useCurrent || false}\n                  onChange={ () => setUseCurrent(!useCurrent)}/>\n              </div>\n            </div>\n          </div>\n          <div>\n            <div className=\"form-value input-container-with-dropdown flex-row-all\">\n              <input\n                placeholder=\"$500\"\n                onChange={e => setSellPrice(e.target.value)}\n                value={sellPrice || \"\"}\n              />\n            </div>\n          </div>\n        </div>\n    </React.Fragment>\n  )\n}\n\nexport default InputSellPrice;","import {useEffect, useState } from \"react\";\n\nexport function useCoinUpdate(costPerCoin, totalInvestment) {\n  const [numberOfCoins, setNumberOfCoins] = useState(0);\n\n  useEffect(() => {\n    console.log(costPerCoin, totalInvestment);\n    let n;\n    if (costPerCoin && totalInvestment) {\n      let costPerCoinStr = costPerCoin.toString();\n      n = parseFloat(\n        totalInvestment.replace(/[^0-9.]/g, \"\") /\n          costPerCoinStr.replace(/[^0-9.]/g, \"\")\n      ).toFixed(6);\n      setNumberOfCoins(n);\n    } else {\n      setNumberOfCoins(0);\n    }\n  }, [costPerCoin, totalInvestment]);\n  return numberOfCoins;\n}\n\nexport function useTotalReturn(\n  costPerCoin,\n  totalInvestment,\n  futureCost,\n  numberOfCoins\n) {\n  const [totalReturn, setTotalReturn] = useState(0);\n  useEffect(() => {\n    if (costPerCoin && totalInvestment && futureCost && numberOfCoins) {\n      const returnValue = parseFloat(\n        numberOfCoins.toString().replace(/[^0-9.]/, \"\") *\n          futureCost.toString().replace(/[^0-9.]/g, \"\")\n      ).toFixed(2);\n      setTotalReturn(returnValue);\n    } else if (costPerCoin && totalInvestment) {\n      setTotalReturn(totalInvestment.replace(/[^0-9.]/g, \"\"));\n    } else {\n      setTotalReturn(0);\n    }\n  }, [costPerCoin, totalInvestment, futureCost, numberOfCoins]);\n  return totalReturn;\n}\n\nexport function useIsProfit(profitOrLoss) {\n  const [isProfit, setIsProfit] = useState();\n  useEffect( () => {\n    setIsProfit(profitOrLoss > 0)\n  }, [profitOrLoss]);\n  return isProfit;\n}\n\nexport function useSetProfit(totalReturn, totalInvestment, futureCost) {\n  const [profit, setProfit] = useState(0);\n  useEffect(() => {\n    if (futureCost && totalInvestment && totalReturn) {\n      const returnValue = parseFloat(\n        totalReturn.replace(/[^0-9.]/g, \"\") -\n          totalInvestment.replace(/[^0-9.]/g, \"\")\n      ).toFixed(2);\n      setProfit(returnValue);\n    } else {\n      setProfit(0);\n    }\n  }, [totalReturn, totalInvestment, futureCost]);\n  return profit;\n}\n\nexport function formatCurrency(amount) {\n  if(amount) {\n    return new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n    }).format(amount.replace(/[^0-9.]/, \"\"))\n  }\n}","import { useContext, useEffect, useState } from \"react\";\nimport { CalculatorContext } from \"./Calculator\";\nimport { useCoinUpdate, useTotalReturn, useSetProfit, formatCurrency, useIsProfit } from \"./hooks\";\n\nconst CalculatorRoi = () => {\n\n  const { purchasedPrice, investment, sellPrice, purchasedCryptoName } = useContext(CalculatorContext);\n  const numberOfCoins = useCoinUpdate(purchasedPrice, investment);\n  const totalReturn = useTotalReturn(\n    purchasedPrice,\n    investment,\n    sellPrice,\n    numberOfCoins\n  );\n  const profitOrLoss = useSetProfit(totalReturn, investment, sellPrice)\n  const isProfit = useIsProfit(profitOrLoss);\n\n  return (\n    <div className=\"calc-right-content\">\n      <div className=\"calc-rio-heading\">\n        <div>Return on Investment</div>\n        <div />\n      </div>\n\n      <div className=\"roi-row roi-label\">\n        <div>Crypto: </div>\n        <div>{ purchasedCryptoName }</div>\n      </div>\n\n      <div className=\"roi-row roi-label\">\n        <div># of coins:</div>\n        <div>{ numberOfCoins }</div>\n      </div>\n\n      <div className=\"roi-row roi-label\">\n        <div>Total return:</div>\n        <div>{ formatCurrency(totalReturn) }</div>\n      </div>\n\n      <div className=\"roi-row roi-label\">\n        <div>Profit/Loss:</div> \n        <div className={ isProfit ? \"roi-isProfit\" : \"roi-isLoss\"}>{ formatCurrency(profitOrLoss) }</div>\n      </div>\n      \n    </div>)\n}\n\nexport default CalculatorRoi;","import React, { useState } from \"react\";\nimport ls from \"local-storage\";\nimport { InputInvestment, InputCrypto, InputPurchasePrice, InputSellPrice } from \"./inputs\";\nimport CalculatorRoi from \"./CalculatorRoi\";\nexport const CalculatorContext = React.createContext();\n\nconst Calculator = ({isCopy, closeClick, id}) => {\n\n  const [investment, setInvestment] = useState(ls.get(\"investment\") || \"\");\n  const [crypto, setCrypto] = useState();\n\n  const investmentHandler = value => {\n    setInvestment(value);\n    if(!isCopy) { ls.set(\"investment\", value) };\n  }\n\n  const cryptoHandler = value => {\n    setCrypto(value);\n  }\n\n  const [purchasedPrice, setPurchasedPrice] = useState(ls.get(\"purchasedPrice\"));\n  const [purchasedCryptoName, setPurchasedCryptoName] = useState(ls.get(\"purchasedName\"));\n  const [purchasedSymbol, setPurchasedSymbol] = useState(ls.get(\"cryptoSymbol\"));\n  const [useCurrentPrice, setUseCurrentPrice] = useState();\n  const [sellPrice, setSellPrice] = useState();\n\n  const value = {\n    purchasedPrice,\n    setPurchasedPrice,\n    purchasedCryptoName,\n    setPurchasedCryptoName,\n    purchasedSymbol,\n    setPurchasedSymbol,\n    useCurrentPrice,\n    setUseCurrentPrice,\n    setSellPrice,\n    sellPrice,\n    investment,\n    isCopy\n  }\n\n\n  return (\n    <CalculatorContext.Provider value={ value}>\n      <div className=\"flex-row\">\n        <div className=\"calc-left\">\n          <div className=\"card-container padding-10 full-width\">\n            <div className=\"card-header\">ROI Calculator</div>\n            <div className=\"card-text margin-bottom-10\">Determine your ROI based on past or current crypto prices</div>\n            <InputInvestment value={investment} onChange={investmentHandler} />\n            <InputCrypto value={crypto} onChange={cryptoHandler} />\n            <InputPurchasePrice />\n            <InputSellPrice />\n            { isCopy && <div className=\"calc-close\" onClick={() => closeClick(id)}><div>&times;</div></div>}\n          </div>\n          \n        </div>\n        <div className='calc-right'>\n          <CalculatorRoi />\n        </div>\n      </div>\n    </CalculatorContext.Provider>\n  )\n}\n\nexport default Calculator;","import {useState} from \"react\";\nimport Calculator from \"./Calculator\";\n\nconst initialCalculatorList = [];\n\nconst Calculators = () => {\n\n  const [childCalculators, setChildCalculators] = useState(\n    initialCalculatorList\n  );\n\n  const closeClick = (id) => {\n    const filtered = childCalculators.filter((item) => item.id !== id);\n    setChildCalculators(filtered);\n  };\n\n  const clickHandler = () => {\n    setChildCalculators((childCalculators) => [\n      ...childCalculators,\n      { id: childCalculators.length },\n    ]);\n  }\n\n  return (\n    <div className=\"body-centered\">\n      <Calculator isCopy={false} />\n      {childCalculators.map((item, n) => (\n        <Calculator\n          key={n}\n          isCopy={true}\n          id={n}\n          closeClick={closeClick}\n        />\n      ))}\n      <button className=\"calc-button\" onClick={clickHandler}>+ Add ROI Calculator</button>\n    </div>\n  )\n}\n\nexport default Calculators;","import {\n  TwitterShareButton,\n  TwitterIcon,\n  FacebookShareButton,\n  FacebookIcon,\n  LinkedinShareButton,\n  LinkedinIcon,\n  RedditShareButton,\n  RedditIcon,\n} from \"react-share\";\n\nconst Share = () => {\n  const url = \"https://bitcoinprojection.com\";\n  const title = \"Crypto ROI profit calculator\";\n  const description =\n    \"Easily calculate profit in real-time or create what-if scenarios for your crypto ivestment\";\n  const size = 32;\n\n  return (\n    <div className=\"blurb margin-top-30 flex-row-all\">\n      <div className=\"margin-right-10\">\n        <TwitterShareButton\n          title={title}\n          via=\"JoeL42737181\"\n          hashtags={[\"Cryptocurrency\", \"Bitcoin\", \"Ethereum\"]}\n          url={url}\n        >\n          <TwitterIcon size={size} round={true} />\n        </TwitterShareButton>\n      </div>\n      <div className=\"margin-right-10\">\n        <FacebookShareButton title={title} description={description} url={url}>\n          <FacebookIcon size={size} />\n        </FacebookShareButton>\n      </div>\n      <div className=\"margin-right-10\">\n        <LinkedinShareButton\n          title={title}\n          description={description}\n          source={url}\n          url={url}\n        >\n          <LinkedinIcon size={size} />\n        </LinkedinShareButton>\n      </div>\n      <div className=\"margin-right-10\">\n        <RedditShareButton\n          title={title}\n          description={description}\n          source={url}\n          url={url}\n        >\n          <RedditIcon size={size} />\n        </RedditShareButton>\n      </div>\n    </div>\n  );\n};\n\nexport default Share;\n","import React from \"react\";\nimport { Header, Ticker, Calculators, Share } from \"../../components/elements\";\n\nconst Home = () => {\n  return (<div className=\"body-centered\">\n            <Header />\n            <Ticker />\n            <Calculators />\n            <Share />\n          </div>)\n};\n\nexport default Home;\n","import React from \"react\";\nimport Logo from \"../../images/Logo\";\n\nconst LookAndFeel = () => {\n  return (<div>\n            <div>\n              <Logo imgColor=\"#54c1f7\"  mainColor=\"#efefef\" secondaryColor=\"#1baef7\" />\n            </div>\n            <div className=\"font-full\">Full intensity</div>\n            <div className=\"font-80\">80% intensity</div>\n            <div className=\"font-50\">50% intensity</div>\n\n            <div className=\"flex-row-all\">\n              <div className=\"card-container card-container-small centered-content-v\">\n                Card container (vertical centered)\n              </div>\n\n              <div className=\"card-container card-container-small centered-content-h flex-column-all\">\n                Card container (horizontal centered)\n              </div>\n\n              <div className=\"card-container card-container-small centered-content\">\n                Verttical &amp; Horizontal\n              </div>\n            </div>\n            \n          </div>)\n};\n\nexport default LookAndFeel;","import { Home, LookAndFeel } from \"./containers\";\nimport \"./css/style.scss\";\nimport { AppContextProvider } from \"./components/elements/AppContext\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <AppContextProvider>\n       <main>\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/home\" component={Home}  />\n          <Route path=\"/lookandfeel\" component={LookAndFeel} />\n        </Switch>\n        </main>\n      </AppContextProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}