{"version":3,"sources":["components/elements/AppContext/AppContext.js","components/elements/CryptoCalculator/inputs/CryptoList.js","components/elements/CryptoCalculator/inputs/CryptoInput.js","components/elements/CryptoCalculator/inputs/ValueInput.js","components/elements/CryptoCalculator/Roi.js","components/elements/CryptoCalculator/CryptoCalculator.js","components/elements/CryptoCalculator/hooks.js","components/elements/Ticker/Ticker.js","containers/home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","AppContextProvider","props","useState","btc","bch","eth","ltc","bnb","ticker","setTicker","Provider","value","children","CryptoList","click","setETH","setBTC","setBCH","setLTC","setBNB","useContext","useEffect","className","onClick","onClickCurrent","setCrypto","crypto","showDropdown","setDropdown","currentSymbol","setCurrentSymbol","cryptoPrice","setCryptoPrice","type","placeholder","onChange","e","target","price","cryptoName","symbol","label","onChangeHandler","disabled","numberOfCoins","formattedProfit","formattedReturn","profit","parseFloat","toFixed","CryptoCalculator","closeable","id","closeClick","investment","updateInvestment","costPerCoin","setCostPerCoin","totalInvestment","setTotalInvestment","useSetInvestment","futureCost","setFutureCost","setNumberOfCoins","n","costPerCoinStr","toString","replace","useCoinUpdate","totalReturn","setTotalReturn","returnValue","useTotalReturn","setProfit","useSetProfit","setFormattedProfit","setFormattedReturn","Intl","NumberFormat","style","currency","format","formatted","useSetFormattedProfit","CryptoInput","ValueInput","Roi","console","log","count","setTimercount","countRef","useRef","fetch","then","response","json","data","ETH","USD","BTC","BCH","LTC","BNB","updater","_timer","setTimeout","current","clearTimeout","formatter","initialCalculatorList","Home","childCalculators","setChildCalculators","setInvestment","document","title","filtered","filter","item","Ticker","map","length","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.29c91cf7.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const AppContext = createContext();\n\nexport const AppContextProvider = (props) => {\n  const initialValue = {\n    ticker: {\n      btc: 40000,\n      bch: 500,\n      eth: 1800,\n      ltc: 450,\n      bnb: 400,\n    },\n  };\n  const [ticker, setTicker] = useState(initialValue.ticker);\n\n  return (\n    <AppContext.Provider value={[ticker, setTicker]}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContext;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { AppContext } from \"../../../elements/AppContext\";\n\nconst CryptoList = ({ click }) => {\n  const [eth, setETH] = useState(\"...\");\n  const [btc, setBTC] = useState(\"...\");\n  const [bch, setBCH] = useState(\"...\");\n  const [ltc, setLTC] = useState(\"...\");\n  const [bnb, setBNB] = useState(\"...\");\n  const [ticker] = useContext(AppContext);\n\n  useEffect(() => {\n    setETH(ticker.eth);\n    setBTC(ticker.btc);\n    setBCH(ticker.bch);\n    setLTC(ticker.ltc);\n    setBNB(ticker.bnb);\n  }, [ticker]);\n\n  return (\n    <div className=\"dropdown-list\">\n      <ul>\n        <li onClick={() => click(btc, \"Bitcoin\", \"btc\")}>Bitcoin: {btc}</li>\n        <li onClick={() => click(eth, \"Ethereum\", \"eth\")}>Ethereum: {eth}</li>\n        <li onClick={() => click(bch, \"Bitcoin Cash\", \"bch\")}>\n          Bitcoin cash: {bch}\n        </li>\n        <li onClick={() => click(ltc, \"Litecoin\", \"ltc\")}>Litecoin: {ltc}</li>\n        <li onClick={() => click(bnb, \"Binance\", \"bnb\")}>Binance: {bnb}</li>\n        <li onClick={() => click(null, \"Custom\")}>Custom</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default CryptoList;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport CryptoList from \"./CryptoList\";\nimport { AppContext } from \"../../../elements/AppContext\";\n\nexport default ({ onClickCurrent, setCrypto, crypto }) => {\n  const [showDropdown, setDropdown] = useState();\n  const [ticker] = useContext(AppContext);\n  const [currentSymbol, setCurrentSymbol] = useState(\"\");\n  const [cryptoPrice, setCryptoPrice] = useState(0);\n\n  const clickHandler = (price, cryptoName, symbol) => {\n    setDropdown(false);\n    onClickCurrent(price, cryptoName);\n    setCurrentSymbol(symbol);\n    setCryptoPrice(price);\n  };\n\n  useEffect(() => {\n    if (ticker[currentSymbol] !== cryptoPrice && cryptoPrice !== 0) {\n      setCryptoPrice(ticker[currentSymbol]);\n      onClickCurrent(ticker[currentSymbol]);\n    }\n  }, [ticker, currentSymbol, cryptoPrice]);\n\n  return (\n    <div className=\"flex-row div-spacing-10\">\n      <div className=\"left-label\">Crypto: </div>\n      <div className=\"input-container-with-dropdown\">\n        <input\n          type=\"text\"\n          placeholder=\"Choose cryptocurrency\"\n          onChange={(e) => setCrypto(e.target.value)}\n          value={crypto}\n        />\n        <div\n          className=\"arrow-container\"\n          onClick={() => setDropdown(!showDropdown)}\n        >\n          <span>&#9662;</span>\n        </div>\n        {showDropdown && <CryptoList click={clickHandler} />}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({\n  label,\n  onChangeHandler,\n  value = \"\",\n  placeholder,\n  disabled,\n}) => (\n  <div className=\"flex-row div-spacing-10\">\n    <div className=\"left-label\">{label}: </div>\n    <div className=\"input-container\">\n      <input\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={(e) => onChangeHandler(e.target.value)}\n        value={value !== 0 ? value : \"\"}\n        disabled={disabled}\n      />\n    </div>\n  </div>\n);\n","import React from \"react\";\n\nexport default ({\n  crypto,\n  numberOfCoins,\n  formattedProfit,\n  formattedReturn,\n  profit,\n}) => (\n  <div className=\"card-container card-2\">\n    <div>\n      <span className=\"title-medium-label\">ROI:&nbsp;</span>\n      <span className=\"title-medium-value\">{crypto}</span>\n    </div>\n    <div>\n      Number of coins:{\" \"}\n      <span className=\"span-100 result-1\">\n        {numberOfCoins !== 0 ? parseFloat(numberOfCoins).toFixed(2) : \"-\"}\n      </span>\n    </div>\n    <div>\n      Total Return:{\" \"}\n      <span className=\"span-100 result-1\">\n        {formattedReturn !== 0 ? formattedReturn : \"-\"}\n      </span>\n    </div>\n    <div>\n      Profit:{\" \"}\n      <span\n        className={`span-100 ${profit > 0 ? \"result-2\" : \"result-negative\"}`}\n      >\n        {formattedProfit !== 0 ? formattedProfit : \"\"}\n      </span>\n    </div>\n  </div>\n);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  useSetInvestment,\n  useCoinUpdate,\n  useTotalReturn,\n  useSetProfit,\n  useSetFormattedProfit,\n} from \"./hooks\";\n\nimport CryptoInput from \"./inputs/CryptoInput\";\nimport ValueInput from \"./inputs/ValueInput\";\nimport Roi from \"./Roi\";\n\nconst CryptoCalculator = ({\n  closeable,\n  id,\n  closeClick,\n  investment,\n  updateInvestment,\n}) => {\n  const [costPerCoin, setCostPerCoin] = useState(0);\n  const [totalInvestment, setTotalInvestment] = useSetInvestment(investment);\n  const [futureCost, setFutureCost] = useState(0);\n  const [crypto, setCrypto] = useState(\"\");\n  const numberOfCoins = useCoinUpdate(costPerCoin, totalInvestment);\n  const totalReturn = useTotalReturn(\n    costPerCoin,\n    totalInvestment,\n    futureCost,\n    numberOfCoins\n  );\n  const profit = useSetProfit(totalReturn, totalInvestment, futureCost);\n  const [formattedProfit, formattedReturn] = useSetFormattedProfit(\n    totalReturn,\n    profit\n  );\n\n  const onClickCurrent = (price, cryptoName) => {\n    if (price) {\n      setCostPerCoin(price);\n    }\n    if (cryptoName) {\n      setCrypto(cryptoName);\n    }\n  };\n\n  const investmentHandler = (investment) => {\n    setTotalInvestment(investment);\n    if (updateInvestment) {\n      updateInvestment(investment);\n    }\n  };\n\n  useEffect(() => {\n    setTotalInvestment(investment);\n  }, [investment]);\n\n  return (\n    <div className=\"flex-row\">\n      <div className=\"card-container card-1\">\n        {closeable && (\n          <div className=\"close\" onClick={() => closeClick(id)}>\n            <div className=\"close-x\">x</div>\n          </div>\n        )}\n\n        <CryptoInput\n          onClickCurrent={onClickCurrent}\n          setCrypto={setCrypto}\n          crypto={crypto}\n        />\n\n        <ValueInput\n          label=\"Current price\"\n          onChangeHandler={setCostPerCoin}\n          value={costPerCoin}\n          placeholder={\"cost per coin\"}\n        />\n\n        <ValueInput\n          label=\"Total Investment\"\n          onChangeHandler={investmentHandler}\n          value={closeable ? investment : totalInvestment}\n          disabled={closeable ? true : false}\n          placeholder={\"ie $25,000\"}\n        />\n\n        <ValueInput\n          label=\"Future price\"\n          onChangeHandler={setFutureCost}\n          value={futureCost}\n          placeholder={\"expected future price $\"}\n        />\n      </div>\n\n      <Roi\n        crypto={crypto}\n        numberOfCoins={numberOfCoins}\n        formattedProfit={formattedProfit}\n        formattedReturn={formattedReturn}\n        profit={profit}\n      />\n    </div>\n  );\n};\n\nexport default CryptoCalculator;\n","import { useState, useEffect } from \"react\";\n\nexport function useSetInvestment(investment) {\n  const [totalInvestment, setTotalInvestment] = useState(investment);\n  useEffect(() => {\n    setTotalInvestment(totalInvestment);\n  }, [totalInvestment]);\n  return [totalInvestment, setTotalInvestment];\n}\n\nexport function useCoinUpdate(costPerCoin, totalInvestment) {\n  const [numberOfCoins, setNumberOfCoins] = useState(0);\n\n  useEffect(() => {\n    let n;\n    if (costPerCoin && totalInvestment) {\n      let costPerCoinStr = costPerCoin.toString();\n      n = parseFloat(\n        totalInvestment.replace(/[^0-9.]/g, \"\") /\n          costPerCoinStr.replace(/[^0-9.]/g, \"\")\n      ).toFixed(6);\n      setNumberOfCoins(n);\n    } else {\n      setNumberOfCoins(0);\n    }\n  }, [costPerCoin, totalInvestment]);\n  return numberOfCoins;\n}\n\nexport function useTotalReturn(\n  costPerCoin,\n  totalInvestment,\n  futureCost,\n  numberOfCoins\n) {\n  const [totalReturn, setTotalReturn] = useState(0);\n  useEffect(() => {\n    if (costPerCoin && totalInvestment && futureCost && numberOfCoins) {\n      const returnValue = parseFloat(\n        numberOfCoins.replace(/[^0-9.]/, \"\") *\n          futureCost.replace(/[^0-9.]/g, \"\")\n      ).toFixed(2);\n      setTotalReturn(returnValue);\n    } else if (costPerCoin && totalInvestment) {\n      setTotalReturn(totalInvestment.replace(/[^0-9.]/g, \"\"));\n    } else {\n      setTotalReturn(0);\n    }\n  }, [costPerCoin, totalInvestment, futureCost, numberOfCoins]);\n  return totalReturn;\n}\n\nexport function useSetProfit(totalReturn, totalInvestment, futureCost) {\n  const [profit, setProfit] = useState(0);\n  useEffect(() => {\n    if (futureCost && totalInvestment && totalReturn) {\n      const returnValue = parseFloat(\n        totalReturn.replace(/[^0-9.]/g, \"\") -\n          totalInvestment.replace(/[^0-9.]/g, \"\")\n      ).toFixed(2);\n      setProfit(returnValue);\n    } else {\n      setProfit(0);\n    }\n  }, [totalReturn, totalInvestment, futureCost]);\n  return profit;\n}\n\nexport function useSetFormattedProfit(totalReturn, profit) {\n  const [formattedProfit, setFormattedProfit] = useState(0);\n  const [formattedReturn, setFormattedReturn] = useState(0);\n\n  useEffect(() => {\n    if (totalReturn) {\n      setFormattedReturn(\n        new Intl.NumberFormat(\"en-US\", {\n          style: \"currency\",\n          currency: \"USD\",\n        }).format(totalReturn.replace(/[^0-9.]/, \"\"))\n      );\n    } else {\n      setFormattedReturn(0);\n    }\n    if (profit) {\n      let formatted = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n      }).format(profit.replace(/[^0-9.-]/, \"\"));\n      if (profit < 0) {\n        setFormattedProfit(`-${formatted.replace(/-/, \"\")}`);\n      } else {\n        setFormattedProfit(`${formatted}`);\n      }\n    } else {\n      setFormattedProfit(0);\n    }\n  }, [totalReturn, profit]);\n  return [formattedProfit, formattedReturn];\n}\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { AppContext } from \"../\";\n\nexport default () => {\n  console.log(\"Update\");\n  const [eth, setETH] = useState(\"...\");\n  const [btc, setBTC] = useState(\"...\");\n  const [bch, setBCH] = useState(\"...\");\n  const [ltc, setLTC] = useState(\"...\");\n  const [bnb, setBNB] = useState(\"...\");\n\n  const [ticker, setTicker] = useContext(AppContext);\n  const [count, setTimercount] = useState(0);\n  const countRef = useRef(count);\n\n  useEffect(() => {\n    const endpoint = `https://min-api.cryptocompare.com/data/pricemulti?fsyms=ETH,BTC,BCH,LTC,BNB&tsyms=USD&extraParams=CryptoCalculator`;\n    const headers = {\n      \"Content-Type\": \"application-json\",\n    };\n    fetch(endpoint, headers)\n      .then((response) => response.json())\n      .then((data) => {\n        setETH(data.ETH.USD);\n        setBTC(data.BTC.USD);\n        setBCH(data.BCH.USD);\n        setLTC(data.LTC.USD);\n        setBNB(data.BNB.USD);\n        setTicker({\n          eth: data.ETH.USD,\n          btc: data.BTC.USD,\n          bch: data.BCH.USD,\n          ltc: data.LTC.USD,\n          bnb: data.BNB.USD,\n        });\n      });\n  }, [count]);\n\n  const updater = () => {\n    const _timer = setTimeout(() => {\n      setTimercount(countRef.current++);\n      updater();\n      clearTimeout(_timer);\n    }, 10000);\n  };\n\n  useEffect(() => {}, [btc, bch, eth, ltc, bnb]);\n  useEffect(() => {\n    updater();\n  }, []);\n\n  const formatter = (price) => {\n    if (price) {\n      return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n      }).format(price);\n    }\n  };\n\n  return (\n    <div className=\"ticker-container flex-row\">\n      <div className=\"ticker-label\">Bitcoin: </div>\n      <div className=\"ticker-value\">{formatter(btc)}</div>\n\n      <div className=\"ticker-label\">Ethereum: </div>\n      <div className=\"ticker-value\">{formatter(eth)}</div>\n\n      <div className=\"ticker-label\">Bitcoin Cash: </div>\n      <div className=\"ticker-value\">{formatter(bch)}</div>\n\n      <div className=\"ticker-label\">Litecoin: </div>\n      <div className=\"ticker-value\">{formatter(ltc)}</div>\n\n      <div className=\"ticker-label\">Binance: </div>\n      <div className=\"ticker-value\">{formatter(bnb)}</div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { CryptoCalculator, Ticker } from \"../../components/elements\";\n\nconst initialCalculatorList = [];\n\nconst Home = () => {\n  const [childCalculators, setChildCalculators] = useState(\n    initialCalculatorList\n  );\n\n  const [investment, setInvestment] = useState(0);\n\n  useEffect(() => {\n    document.title = \"Crypto Calculator ROI\";\n  });\n\n  const closeClick = (id) => {\n    const filtered = childCalculators.filter((item) => item.id !== id);\n    setChildCalculators(filtered);\n  };\n\n  const updateInvestmentHandler = (investment) => {\n    setInvestment(investment);\n  };\n\n  return (\n    <div>\n      <div className=\"flex-row\">\n        <div className=\"title-large\">Crypto ROI Calculator</div>\n        <div className=\"heading-container heading\">bitcoinprojection.com</div>\n      </div>\n\n      <Ticker />\n      <CryptoCalculator updateInvestment={updateInvestmentHandler} />\n      {childCalculators.map((item, n) => (\n        <CryptoCalculator\n          key={n}\n          closeable={true}\n          id={n}\n          closeClick={closeClick}\n          investment={investment}\n        />\n      ))}\n      <div className=\"button-container\">\n        <button\n          onClick={() => {\n            setChildCalculators((childCalculators) => [\n              ...childCalculators,\n              { id: childCalculators.length },\n            ]);\n          }}\n        >\n          Compare +\n        </button>\n      </div>\n      <div className=\"blurb\">\n        I needed a quick way to determine future crypto profit projections with\n        my investment. For example, if I invested $25,000 in Ethereum at a\n        current price of $1700, what would my return look like if the future\n        price per coin rose to $1800? What if it rose to $3000? <br />\n        How would that compare to an investment in Bitcoin? <br />\n        Use the bitcoin / crypto future calculator above. <br />\n        <br />\n        Also, I'm open to suggestions!\n        <br />\n        <a href=\"https://twitter.com/JoeL42737181\" className=\"link-light\">\n          Find me on Twitter :-)\n        </a>\n        <br />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { Home } from \"./containers/home\";\nimport \"./css/general.scss\";\nimport { AppContextProvider } from \"./components/elements/AppContext\";\n\nfunction App() {\n  return (\n    <AppContextProvider>\n      <div className=\"body-centered\">\n        <Home />\n      </div>\n    </AppContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}