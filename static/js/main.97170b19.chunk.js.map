{"version":3,"sources":["components/elements/AppContext/AppContext.js","components/elements/CryptoCalculator/inputs/CryptoList.js","components/elements/CryptoCalculator/inputs/CryptoInput.js","components/elements/CryptoCalculator/inputs/ValueInput.js","components/elements/CryptoCalculator/Roi.js","components/elements/CryptoCalculator/CryptoCalculator.js","components/elements/CryptoCalculator/hooks.js","components/elements/Ticker/utils.js","components/elements/Ticker/hooks.js","components/elements/Ticker/Ticker.js","containers/home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","AppContextProvider","props","initialValue","btc","bch","eth","ltc","bnb","useState","ticker","setTicker","tickerNow","setTickerNow","currentSymbol","setCurrentSymbol","value","dataIsHistorical","setDataIsHistorical","Provider","children","CryptoList","click","setETH","setBTC","setBCH","setLTC","setBNB","useContext","useEffect","className","onClick","CryptoInput","onClickCurrent","setCrypto","crypto","showDropdown","setDropdown","cryptoPrice","setCryptoPrice","type","placeholder","onChange","e","target","price","cryptoName","symbol","ValueInput","label","onChangeHandler","disabled","numberOfCoins","formattedProfit","formattedReturn","profit","parseFloat","toFixed","CryptoCalculator","closeable","id","closeClick","investment","updateInvestment","useCurrentPrice","setUseCurrentPrice","costPerCoin","setCostPerCoin","totalInvestment","setTotalInvestment","useSetInvestment","futureCost","setFutureCost","setNumberOfCoins","n","costPerCoinStr","toString","replace","useCoinUpdate","lockInPrice","setLockInPrice","totalReturn","setTotalReturn","returnValue","useTotalReturn","setProfit","useSetProfit","setFormattedProfit","setFormattedReturn","Intl","NumberFormat","style","currency","format","formatted","useSetFormattedProfit","useSetPriceNow","checked","alert","Roi","dateFormatter","date","datum","Date","now","toLocaleString","split","isDateHistorical","api","selectedDate","getTickersFromDate","strDate","Promise","success","a","parse","timestamp","symbols","ETH","USD","BTC","BCH","LTC","BNB","keys","Object","i","length","tickerFetch","endpoint","fetch","then","response","json","data","setSelectedDate","d","console","log","Ticker","showHistorical","toggleShowHistorical","startDate","setStartDate","count","setTimercount","countRef","useRef","timer","timerRef","updateTickerData","useCallback","current","setTimeout","clearTimeout","setData","dataObject","today","_updateData","useApiFetch","historicalText","setHistoricalText","selectDate","useToggleDisplayDate","formatter","isNaN","selected","onSelect","initialCalculatorList","Home","childCalculators","setChildCalculators","setInvestment","document","title","filtered","filter","item","map","TwitterShareButton","via","hashtags","url","TwitterIcon","size","round","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.97170b19.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const AppContext = createContext();\n\nexport const AppContextProvider = (props) => {\n  const initialValue = {\n    ticker: {\n      btc: 0,\n      bch: 0,\n      eth: 0,\n      ltc: 0,\n      bnb: 0,\n    },\n    currentSybmol: \"\",\n  };\n  const [ticker, setTicker] = useState(initialValue.ticker);\n  const [tickerNow, setTickerNow] = useState(initialValue.ticker);\n  const [currentSymbol, setCurrentSymbol] = useState(initialValue.currentSybmol);\n  const [dataIsHistorical, setDataIsHistorical] = useState(false);\n\n  const value = {\n    ticker, \n    setTicker,\n    tickerNow,\n    setTickerNow,\n    currentSymbol,\n    setCurrentSymbol,\n    dataIsHistorical,\n    setDataIsHistorical\n  };\n\n  return (\n    <AppContext.Provider value={value}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContext;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { AppContext } from \"../../../elements/AppContext\";\n\nconst CryptoList = ({ click }) => {\n  const [eth, setETH] = useState(\"...\");\n  const [btc, setBTC] = useState(\"...\");\n  const [bch, setBCH] = useState(\"...\");\n  const [ltc, setLTC] = useState(\"...\");\n  const [bnb, setBNB] = useState(\"...\");\n  const {ticker} = useContext(AppContext);\n\n  useEffect(() => {\n    setETH(ticker.eth);\n    setBTC(ticker.btc);\n    setBCH(ticker.bch);\n    setLTC(ticker.ltc);\n    setBNB(ticker.bnb);\n  }, [ticker]);\n\n  return (\n    <div className=\"dropdown-list\">\n      <ul>\n        <li onClick={() => click(btc, \"Bitcoin\", \"btc\")}>Bitcoin: {btc}</li>\n        <li onClick={() => click(eth, \"Ethereum\", \"eth\")}>Ethereum: {eth}</li>\n        <li onClick={() => click(bch, \"Bitcoin Cash\", \"bch\")}>\n          Bitcoin cash: {bch}\n        </li>\n        <li onClick={() => click(ltc, \"Litecoin\", \"ltc\")}>Litecoin: {ltc}</li>\n        <li onClick={() => click(bnb, \"Binance\", \"bnb\")}>Binance: {bnb}</li>\n        <li onClick={() => click(null, \"Custom\")}>Custom</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default CryptoList;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport CryptoList from \"./CryptoList\";\nimport { AppContext } from \"../../../elements/AppContext\";\n\nconst CryptoInput = ({ onClickCurrent, setCrypto, crypto }) => {\n  const [showDropdown, setDropdown] = useState();\n  const {ticker} = useContext(AppContext);\n  const [currentSymbol, setCurrentSymbol] = useState(\"\");\n  const [cryptoPrice, setCryptoPrice] = useState(0);\n\n  const clickHandler = (price, cryptoName, symbol) => {\n    setDropdown(false);\n    onClickCurrent(price, cryptoName, symbol);\n    setCurrentSymbol(symbol);\n    setCryptoPrice(price);\n  };\n\n  useEffect(() => {\n    if (ticker[currentSymbol] !== cryptoPrice && cryptoPrice !== 0) {\n      setCryptoPrice(ticker[currentSymbol]);\n      onClickCurrent(ticker[currentSymbol]);\n    }\n  }, [ticker, currentSymbol, cryptoPrice, onClickCurrent]);\n\n  return (\n    <div className=\"flex-row div-spacing-10\">\n      <div className=\"left-label\">Crypto: </div>\n      <div className=\"input-container-with-dropdown\">\n        <input\n          type=\"text\"\n          placeholder=\"Choose cryptocurrency\"\n          onChange={(e) => setCrypto(e.target.value)}\n          value={crypto}\n        />\n        <div\n          className=\"arrow-container\"\n          onClick={() => setDropdown(!showDropdown)}\n        >\n          <span>&#9662;</span>\n        </div>\n        {showDropdown && <CryptoList click={clickHandler} />}\n      </div>\n    </div>\n  );\n};\n\nexport default CryptoInput;\n","import React from \"react\";\n\nconst ValueInput = ({\n  label,\n  onChangeHandler,\n  value = \"\",\n  placeholder,\n  disabled,\n}) => (\n  <div className=\"flex-row div-spacing-10\">\n    <div className=\"left-label\">{label}: </div>\n    <div className=\"input-container\">\n      <input\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={(e) => onChangeHandler(e.target.value)}\n        value={value !== 0 ? value : \"\"}\n        disabled={disabled}\n      />\n    </div>\n  </div>\n);\n\nexport default ValueInput;\n","import React from \"react\";\n\nexport default ({\n  crypto,\n  numberOfCoins,\n  formattedProfit,\n  formattedReturn,\n  profit,\n}) => (\n  <div className=\"card-container card-2\">\n    <div>\n      <span className=\"title-medium-label\">ROI:&nbsp;</span>\n      <span className=\"title-medium-value\">{crypto}</span>\n    </div>\n    <div>\n      Number of coins:{\" \"}\n      <span className=\"span-100 result-1\">\n        {numberOfCoins !== 0 ? parseFloat(numberOfCoins).toFixed(2) : \"-\"}\n      </span>\n    </div>\n    <div>\n      Total Return:{\" \"}\n      <span className=\"span-100 result-1\">\n        {formattedReturn !== 0 ? formattedReturn : \"-\"}\n      </span>\n    </div>\n    <div>\n      Profit:{\" \"}\n      <span\n        className={`span-100 ${profit > 0 ? \"result-2\" : \"result-negative\"}`}\n      >\n        {formattedProfit !== 0 ? formattedProfit : \"\"}\n      </span>\n    </div>\n  </div>\n);\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  useSetInvestment,\n  useCoinUpdate,\n  useTotalReturn,\n  useSetProfit,\n  useSetFormattedProfit,\n  useSetPriceNow\n} from \"./hooks\";\n\nimport CryptoInput from \"./inputs/CryptoInput\";\nimport ValueInput from \"./inputs/ValueInput\";\nimport Roi from \"./Roi\";\n\nconst CryptoCalculator = ({\n  closeable,\n  id,\n  closeClick,\n  investment,\n  updateInvestment,\n}) => {\n  const [useCurrentPrice, setUseCurrentPrice] = useState(true);\n  const [costPerCoin, setCostPerCoin] = useState(0);\n  const [totalInvestment, setTotalInvestment] = useSetInvestment(investment);\n  const [futureCost, setFutureCost] = useState(0);\n  const [crypto, setCrypto] = useState(\"\");\n  const numberOfCoins = useCoinUpdate(costPerCoin, totalInvestment);\n  const [currentSymbol, setCurrentSymbol] = useState();\n  const [lockInPrice, setLockInPrice] = useState(false);\n  const totalReturn = useTotalReturn(\n    costPerCoin,\n    totalInvestment,\n    futureCost,\n    numberOfCoins\n  );\n  const profit = useSetProfit(totalReturn, totalInvestment, futureCost);\n  const [formattedProfit, formattedReturn] = useSetFormattedProfit(\n    totalReturn,\n    profit\n  );\n\n  useSetPriceNow(currentSymbol, futureCost, setFutureCost, useCurrentPrice);\n\n  const onClickCurrent = (price, cryptoName, symbol) => {\n    if (price && !lockInPrice) {\n      setCostPerCoin(price);\n    }\n    if (cryptoName) {\n      setCrypto(cryptoName);\n    }\n    if (symbol) {\n      setCurrentSymbol(symbol);\n    }\n  };\n\n  const investmentHandler = (investment) => {\n    setTotalInvestment(investment);\n    if (updateInvestment) {\n      updateInvestment(investment);\n    }\n  };\n\n  const lockInHandler = () => {\n    if(costPerCoin){\n      setLockInPrice(!lockInPrice)\n    } else {\n      alert(\"You cannot lock in price that is empty\")\n    }\n  }\n\n  useEffect(() => {\n    setTotalInvestment(investment);\n  }, [investment, setTotalInvestment]);\n\n  \n  return (\n    <div className=\"flex-row\">\n      <div className=\"card-container card-1\">\n        {closeable && (\n          <div className=\"close\" onClick={() => closeClick(id)}>\n            <div className=\"close-x\">x</div>\n          </div>\n        )}\n\n        <CryptoInput\n          onClickCurrent={onClickCurrent}\n          setCrypto={setCrypto}\n          crypto={crypto}\n        />\n\n        <ValueInput\n          label=\"Purchase price\"\n          onChangeHandler={setCostPerCoin}\n          value={costPerCoin}\n          placeholder={\"cost p/coin when purchased\"}\n          disabled={lockInPrice}\n        />\n\n        <div className=\"flex-row\">\n          <div className=\"left-label left-label-undercopy\">\n            <input type=\"checkbox\" \n                checked={lockInPrice} \n                onChange={ () => lockInHandler()}\n              />\n            <label>lock in price</label>\n          </div>\n        </div>\n\n        <ValueInput\n          label=\"Total Investment\"\n          onChangeHandler={investmentHandler}\n          value={closeable ? investment : totalInvestment}\n          disabled={closeable}\n          placeholder={\"ie $25,000\"}\n        />\n\n        <ValueInput\n          label=\"Price after purchase\"\n          onChangeHandler={setFutureCost}\n          disabled={useCurrentPrice}\n          value={futureCost}\n          placeholder={\"expected future price $\"}\n        />\n\n        <div className=\"flex-row\">\n          <div className=\"left-label left-label-undercopy\">\n            <input type=\"checkbox\" \n                checked={useCurrentPrice} \n                onChange={ () => setUseCurrentPrice(!useCurrentPrice)}\n              />\n            <label>update with latest price</label>\n          </div>\n        </div>\n\n      </div>\n\n      <Roi\n        crypto={crypto}\n        numberOfCoins={numberOfCoins}\n        formattedProfit={formattedProfit}\n        formattedReturn={formattedReturn}\n        profit={profit}\n      />\n    </div>\n  );\n};\n\nexport default CryptoCalculator;\n","import { useState, useEffect, useContext } from \"react\";\nimport { AppContext } from \"../AppContext\";\n\nexport function useSetInvestment(investment) {\n  const [totalInvestment, setTotalInvestment] = useState(investment);\n  useEffect(() => {\n    setTotalInvestment(totalInvestment);\n  }, [totalInvestment]);\n  return [totalInvestment, setTotalInvestment];\n}\n\nexport function useCoinUpdate(costPerCoin, totalInvestment) {\n  const [numberOfCoins, setNumberOfCoins] = useState(0);\n\n  useEffect(() => {\n    let n;\n    if (costPerCoin && totalInvestment) {\n      let costPerCoinStr = costPerCoin.toString();\n      n = parseFloat(\n        totalInvestment.replace(/[^0-9.]/g, \"\") /\n          costPerCoinStr.replace(/[^0-9.]/g, \"\")\n      ).toFixed(6);\n      setNumberOfCoins(n);\n    } else {\n      setNumberOfCoins(0);\n    }\n  }, [costPerCoin, totalInvestment]);\n  return numberOfCoins;\n}\n\nexport function useTotalReturn(\n  costPerCoin,\n  totalInvestment,\n  futureCost,\n  numberOfCoins\n) {\n  const [totalReturn, setTotalReturn] = useState(0);\n  useEffect(() => {\n    if (costPerCoin && totalInvestment && futureCost && numberOfCoins) {\n      const returnValue = parseFloat(\n        numberOfCoins.toString().replace(/[^0-9.]/, \"\") *\n          futureCost.toString().replace(/[^0-9.]/g, \"\")\n      ).toFixed(2);\n      setTotalReturn(returnValue);\n    } else if (costPerCoin && totalInvestment) {\n      setTotalReturn(totalInvestment.replace(/[^0-9.]/g, \"\"));\n    } else {\n      setTotalReturn(0);\n    }\n  }, [costPerCoin, totalInvestment, futureCost, numberOfCoins]);\n  return totalReturn;\n}\n\nexport function useSetProfit(totalReturn, totalInvestment, futureCost) {\n  const [profit, setProfit] = useState(0);\n  useEffect(() => {\n    if (futureCost && totalInvestment && totalReturn) {\n      const returnValue = parseFloat(\n        totalReturn.replace(/[^0-9.]/g, \"\") -\n          totalInvestment.replace(/[^0-9.]/g, \"\")\n      ).toFixed(2);\n      setProfit(returnValue);\n    } else {\n      setProfit(0);\n    }\n  }, [totalReturn, totalInvestment, futureCost]);\n  return profit;\n}\n\nexport function useSetFormattedProfit(totalReturn, profit) {\n  const [formattedProfit, setFormattedProfit] = useState(0);\n  const [formattedReturn, setFormattedReturn] = useState(0);\n\n  useEffect(() => {\n    if (totalReturn) {\n      setFormattedReturn(\n        new Intl.NumberFormat(\"en-US\", {\n          style: \"currency\",\n          currency: \"USD\",\n        }).format(totalReturn.replace(/[^0-9.]/, \"\"))\n      );\n    } else {\n      setFormattedReturn(0);\n    }\n    if (profit) {\n      let formatted = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n      }).format(profit.replace(/[^0-9.-]/, \"\"));\n      if (profit < 0) {\n        setFormattedProfit(`-${formatted.replace(/-/, \"\")}`);\n      } else {\n        setFormattedProfit(`${formatted}`);\n      }\n    } else {\n      setFormattedProfit(0);\n    }\n  }, [totalReturn, profit]);\n  return [formattedProfit, formattedReturn];\n}\n\nexport function useSetPriceNow(currentSymbol, futureCost, setFutureCost, useCurrentPrice ){\n  const { tickerNow } = useContext(AppContext);\n  useEffect(() => {\n    if(useCurrentPrice){\n      setFutureCost(tickerNow[currentSymbol])\n    }\n    \n  }, [currentSymbol, tickerNow, futureCost, setFutureCost, useCurrentPrice]);\n}\n","export const dateFormatter = (date) => {\n  const datum = date || new Date(Date.now());\n  return new Date(datum).toLocaleString().split(\",\")[0];\n};\n\nexport const isDateHistorical = (date) => {\n  const today = new Date(Date.now()).toLocaleString().split(\",\")[0];\n  const selectedDate = new Date(date).toLocaleString().split(\",\")[0];\n  return today !== selectedDate;\n};\n","import { useState, useRef, useEffect, useContext, useCallback } from \"react\";\nimport { AppContext } from \"../\";\nimport { isDateHistorical } from \"./utils\";\n\nconst api = \"https://min-api.cryptocompare.com/data\";\n\nexport function useApiFetch(date) {\n  const {setTicker, setTickerNow} = useContext(AppContext);\n  const [eth, setETH] = useState(\"...\");\n  const [btc, setBTC] = useState(\"...\");\n  const [bch, setBCH] = useState(\"...\");\n  const [ltc, setLTC] = useState(\"...\");\n  const [bnb, setBNB] = useState(\"...\");\n  const [count, setTimercount] = useState(0);\n  const countRef = useRef(count);\n  const [timer] = useState();\n  const timerRef = useRef(timer);\n\n  const updateTickerData = useCallback(() => {\n    timerRef.current = setTimeout(() => {\n      if (isDateHistorical(selectedDate)) {\n        clearTimeout(timerRef.current);\n      } else {\n        setTimercount(countRef.current++);\n        updateTickerData();\n      }\n    }, 10000);\n  }, [timerRef, countRef]);\n\n  useEffect(() => {\n    setSelectedDate(date);\n    if (!isDateHistorical(date)) {\n      clearTimeout(timer);\n      setTimercount(countRef.current++);\n      updateTickerData();\n    } else {\n      clearTimeout(timer);\n    }\n  }, [date, timer, updateTickerData]);\n\n  const setData = useCallback((data) => {\n    let dataObject = {\n      eth: data ? data.ETH.USD : \"...\",\n      btc: data ? data.BTC.USD : \"...\",\n      bch: data ? data.BCH.USD : \"...\",\n      ltc: data ? data.LTC.USD : \"...\",\n      bnb: data ? data.BNB.USD : \"...\",\n    };\n    setETH(dataObject.eth);\n    setBTC(dataObject.btc);\n    setBCH(dataObject.bch);\n    setLTC(dataObject.ltc);\n    setBNB(dataObject.bnb);\n    setTicker(dataObject);\n    return dataObject;\n  }, [setTicker]);\n\n  useEffect( () => {\n    const _updateData = async (date) => {\n      const today = new Date(Date.now()).toLocaleString().split(\",\")[0];\n      const selectedDate = new Date(date).toLocaleString().split(\",\")[0];\n      if (selectedDate !== today) {\n        setData();\n        const data = await getTickersFromDate(selectedDate);\n        setData(data);\n      }\n    }\n    _updateData(date);\n  }, [date, timer, setData]);\n\n  \n\n  useEffect(() => {\n    const endpoint = `${api}/pricemulti?fsyms=ETH,BTC,BCH,LTC,BNB&tsyms=USD&extraParams=CryptoCalculator&ts=1605549600`;\n    const headers = {\n      \"Content-Type\": \"application-json\",\n    };\n    fetch(endpoint, headers)\n      .then((response) => response.json())\n      .then((data) => {\n        const dataObject = setData(data);\n        setTickerNow(dataObject);\n      });\n  }, [count, setData, setTickerNow]);\n\n  return { eth, btc, bch, ltc, bnb };\n}\n\nexport function useToggleDisplayDate(date = new Date(Date.now())) {\n  const [historicalText, setHistoricalText] = useState(\"\");\n  const { setDataIsHistorical } = useContext(AppContext);\n  useEffect(() => {\n    const selectDate = new Date(date).toLocaleString().split(\",\")[0];\n    if (isDateHistorical(selectDate)) {\n      setHistoricalText(\"Select a different date\");\n      setDataIsHistorical(true);\n    } else {\n      setHistoricalText(\"Use data from a previous date\");\n      setDataIsHistorical(false);\n    }\n  }, [date, setDataIsHistorical]);\n\n  return historicalText;\n}\n\nconst getTickersFromDate = (strDate) => {\n  return new Promise(async (success) => {\n    const datum = Date.parse(strDate);\n    const timestamp = datum / 1000;\n    const symbols = {\n      ETH: { USD: 0 },\n      BTC: { USD: 0 },\n      BCH: { USD: 0 },\n      LTC: { USD: 0 },\n      BNB: { USD: 0 },\n    };\n    let keys = Object.keys(symbols);\n    for (let i = 0; i < keys.length; i++) {\n      const symbol = keys[i];\n      const value = await tickerFetch(symbol, timestamp);\n      symbols[symbol] = value[symbol];\n    }\n    return success(symbols);\n  });\n};\n\nconst tickerFetch = (symbol, timestamp) => {\n  const endpoint = `${api}/pricehistorical?fsym=${symbol}&tsyms=USD&ts=${timestamp}&extraParams=CryptoCalculator`;\n  return fetch(endpoint)\n    .then((response) => response.json())\n    .then((data) => data);\n};\n\nlet selectedDate;\n\nconst setSelectedDate = (d) => {\n  selectedDate = d;\n  console.log(selectedDate);\n};\n\nconst getSelectedDate = () => {\n  return selectedDate;\n};\n","import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useApiFetch, useToggleDisplayDate } from \"./hooks\";\nimport { dateFormatter } from \"./utils\";\n\nconst Ticker = () => {\n  const [showHistorical, toggleShowHistorical] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const { eth, btc, bnb, ltc, bch } = useApiFetch(startDate);\n  const historicalText = useToggleDisplayDate(startDate);\n\n  const formatter = (price) => {\n    if (price && !isNaN(price)) {\n      return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n      }).format(price);\n    } else {\n      return price;\n    }\n  };\n\n  const displayDatePicker = () => {\n    toggleShowHistorical(!showHistorical);\n  };\n\n  const onDateSelect = (date) => {\n    toggleShowHistorical(false);\n  };\n\n  return (\n    <div>\n      <div className=\"ticker-container flex-row\">\n        <div className=\"ticker-row\">\n          <div className=\"text-medium date-from-left\">Data from {dateFormatter(startDate)} </div>\n          <div className=\"link marginLeft10 date-from-right\" onClick={() => displayDatePicker()}>\n            {historicalText}\n          </div>\n        </div>\n        <div className=\"text-medium marginLeft10\">\n            {showHistorical && (\n              <DatePicker\n                selected={startDate}\n                onChange={(date) => setStartDate(date)}\n                onSelect={onDateSelect}\n              />\n            )}\n          </div>\n      </div>\n\n      <div className=\"ticker-container flex-row\">\n        <div className=\"ticker-row\">\n          <div className=\"ticker-label\">Bitcoin: </div>\n          <div className=\"ticker-value\">{formatter(btc)}</div>\n        </div>\n\n        <div className=\"ticker-row\">\n          <div className=\"ticker-label\">Ethereum: </div>\n          <div className=\"ticker-value\">{formatter(eth)}</div>\n        </div>\n\n        <div className=\"ticker-row\">\n          <div className=\"ticker-label\">Bitcoin Cash: </div>\n          <div className=\"ticker-value\">{formatter(bch)}</div>\n        </div>\n\n        <div className=\"ticker-row\">\n          <div className=\"ticker-label\">Litecoin: </div>\n          <div className=\"ticker-value\">{formatter(ltc)}</div>\n        </div>\n\n        <div className=\"ticker-row\">\n          <div className=\"ticker-label\">Binance: </div>\n          <div className=\"ticker-value\">{formatter(bnb)}</div>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default Ticker;","import React, { useState, useEffect } from \"react\";\nimport { CryptoCalculator, Ticker } from \"../../components/elements\";\nimport { TwitterShareButton, TwitterIcon, } from \"react-share\";\n\nconst initialCalculatorList = [];\n\nconst Home = () => {\n  const [childCalculators, setChildCalculators] = useState(\n    initialCalculatorList\n  );\n\n  const [investment, setInvestment] = useState(0);\n\n  useEffect(() => {\n    document.title = \"Crypto Calculator ROI\";\n  });\n\n  const closeClick = (id) => {\n    const filtered = childCalculators.filter((item) => item.id !== id);\n    setChildCalculators(filtered);\n  };\n\n  const updateInvestmentHandler = (investment) => {\n    setInvestment(investment);\n  };\n\n  return (\n    <div>\n      <div className=\"flex-row marginTop30 marginBottom30\">\n        <div className=\"title-large heading-left\">Crypto ROI Calculator</div>\n        <div className=\"heading-container heading-right\">bitcoinprojection.com</div>\n      </div>\n\n      <Ticker />\n      <CryptoCalculator updateInvestment={updateInvestmentHandler} />\n      {childCalculators.map((item, n) => (\n        <CryptoCalculator\n          key={n}\n          closeable={true}\n          id={n}\n          closeClick={closeClick}\n          investment={investment}\n        />\n      ))}\n      <div className=\"button-container\">\n        <button\n          onClick={() => {\n            setChildCalculators((childCalculators) => [\n              ...childCalculators,\n              { id: childCalculators.length },\n            ]);\n          }}\n        >\n          Compare +\n        </button>\n      </div>\n      <div className=\"blurb\">\n        <TwitterShareButton \n          title=\"Crypto ROI calculator\"\n          via=\"JoeL42737181\"\n          hashtags={[\"Cryptocurrency\", \"Bitcoin\", \"Ethereum\"]}\n          url=\"https://bitcoinprojection.com\"\n        ><TwitterIcon size={32} round={true} /></TwitterShareButton>\n        <br />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { Home } from \"./containers/home\";\nimport \"./css/general.scss\";\nimport { AppContextProvider } from \"./components/elements/AppContext\";\n\nfunction App() {\n  return (\n    <AppContextProvider>\n      <div className=\"body-centered\">\n        <Home />\n      </div>\n    </AppContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}