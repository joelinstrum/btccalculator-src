{"version":3,"sources":["components/elements/AppContext/AppContext.js","components/elements/CryptoCalculator/inputs/CryptoList.js","components/elements/CryptoCalculator/inputs/CryptoInput.js","components/elements/CryptoCalculator/inputs/ValueInput.js","components/elements/CryptoCalculator/Roi.js","components/elements/CryptoCalculator/CryptoCalculator.js","components/elements/CryptoCalculator/hooks.js","components/elements/Ticker/hooks.js","components/elements/Ticker/utils.js","components/elements/Ticker/Ticker.js","containers/home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","AppContextProvider","props","useState","btc","bch","eth","ltc","bnb","ticker","setTicker","Provider","value","children","CryptoList","click","setETH","setBTC","setBCH","setLTC","setBNB","useContext","useEffect","className","onClick","onClickCurrent","setCrypto","crypto","showDropdown","setDropdown","currentSymbol","setCurrentSymbol","cryptoPrice","setCryptoPrice","type","placeholder","onChange","e","target","price","cryptoName","symbol","label","onChangeHandler","disabled","numberOfCoins","formattedProfit","formattedReturn","profit","parseFloat","toFixed","CryptoCalculator","closeable","id","closeClick","investment","updateInvestment","costPerCoin","setCostPerCoin","totalInvestment","setTotalInvestment","useSetInvestment","futureCost","setFutureCost","setNumberOfCoins","n","costPerCoinStr","toString","replace","useCoinUpdate","totalReturn","setTotalReturn","returnValue","useTotalReturn","setProfit","useSetProfit","setFormattedProfit","setFormattedReturn","Intl","NumberFormat","style","currency","format","formatted","useSetFormattedProfit","CryptoInput","ValueInput","Roi","api","useApiFetch","date","timer","count","setTimercount","countRef","useRef","updateTickerData","setTimeout","isDateHistorical","selectedDate","clearTimeout","current","setSelectedDate","a","today","Date","now","toLocaleString","split","setData","getTickersFromDate","data","ETH","USD","BTC","BCH","LTC","BNB","endpoint","fetch","then","response","json","strDate","Promise","success","datum","parse","timestamp","symbols","keys","Object","i","length","tickerFetch","d","console","log","dateFormatter","showHistorical","toggleShowHistorical","startDate","setStartDate","historicalText","setHistoricalText","selectDate","useToggleDisplayDate","formatter","isUsingHistorical","setIsUsingHistorical","useHistorical","isNaN","selected","onSelect","initialCalculatorList","Home","childCalculators","setChildCalculators","setInvestment","document","title","filtered","filter","item","Ticker","map","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b52b0088.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const AppContext = createContext();\n\nexport const AppContextProvider = (props) => {\n  const initialValue = {\n    ticker: {\n      btc: 40000,\n      bch: 500,\n      eth: 1800,\n      ltc: 450,\n      bnb: 400,\n    },\n  };\n  const [ticker, setTicker] = useState(initialValue.ticker);\n\n  return (\n    <AppContext.Provider value={[ticker, setTicker]}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContext;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { AppContext } from \"../../../elements/AppContext\";\n\nconst CryptoList = ({ click }) => {\n  const [eth, setETH] = useState(\"...\");\n  const [btc, setBTC] = useState(\"...\");\n  const [bch, setBCH] = useState(\"...\");\n  const [ltc, setLTC] = useState(\"...\");\n  const [bnb, setBNB] = useState(\"...\");\n  const [ticker] = useContext(AppContext);\n\n  useEffect(() => {\n    setETH(ticker.eth);\n    setBTC(ticker.btc);\n    setBCH(ticker.bch);\n    setLTC(ticker.ltc);\n    setBNB(ticker.bnb);\n  }, [ticker]);\n\n  return (\n    <div className=\"dropdown-list\">\n      <ul>\n        <li onClick={() => click(btc, \"Bitcoin\", \"btc\")}>Bitcoin: {btc}</li>\n        <li onClick={() => click(eth, \"Ethereum\", \"eth\")}>Ethereum: {eth}</li>\n        <li onClick={() => click(bch, \"Bitcoin Cash\", \"bch\")}>\n          Bitcoin cash: {bch}\n        </li>\n        <li onClick={() => click(ltc, \"Litecoin\", \"ltc\")}>Litecoin: {ltc}</li>\n        <li onClick={() => click(bnb, \"Binance\", \"bnb\")}>Binance: {bnb}</li>\n        <li onClick={() => click(null, \"Custom\")}>Custom</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default CryptoList;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport CryptoList from \"./CryptoList\";\nimport { AppContext } from \"../../../elements/AppContext\";\n\nexport default ({ onClickCurrent, setCrypto, crypto }) => {\n  const [showDropdown, setDropdown] = useState();\n  const [ticker] = useContext(AppContext);\n  const [currentSymbol, setCurrentSymbol] = useState(\"\");\n  const [cryptoPrice, setCryptoPrice] = useState(0);\n\n  const clickHandler = (price, cryptoName, symbol) => {\n    setDropdown(false);\n    onClickCurrent(price, cryptoName);\n    setCurrentSymbol(symbol);\n    setCryptoPrice(price);\n  };\n\n  useEffect(() => {\n    if (ticker[currentSymbol] !== cryptoPrice && cryptoPrice !== 0) {\n      setCryptoPrice(ticker[currentSymbol]);\n      onClickCurrent(ticker[currentSymbol]);\n    }\n  }, [ticker, currentSymbol, cryptoPrice]);\n\n  return (\n    <div className=\"flex-row div-spacing-10\">\n      <div className=\"left-label\">Crypto: </div>\n      <div className=\"input-container-with-dropdown\">\n        <input\n          type=\"text\"\n          placeholder=\"Choose cryptocurrency\"\n          onChange={(e) => setCrypto(e.target.value)}\n          value={crypto}\n        />\n        <div\n          className=\"arrow-container\"\n          onClick={() => setDropdown(!showDropdown)}\n        >\n          <span>&#9662;</span>\n        </div>\n        {showDropdown && <CryptoList click={clickHandler} />}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({\n  label,\n  onChangeHandler,\n  value = \"\",\n  placeholder,\n  disabled,\n}) => (\n  <div className=\"flex-row div-spacing-10\">\n    <div className=\"left-label\">{label}: </div>\n    <div className=\"input-container\">\n      <input\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={(e) => onChangeHandler(e.target.value)}\n        value={value !== 0 ? value : \"\"}\n        disabled={disabled}\n      />\n    </div>\n  </div>\n);\n","import React from \"react\";\n\nexport default ({\n  crypto,\n  numberOfCoins,\n  formattedProfit,\n  formattedReturn,\n  profit,\n}) => (\n  <div className=\"card-container card-2\">\n    <div>\n      <span className=\"title-medium-label\">ROI:&nbsp;</span>\n      <span className=\"title-medium-value\">{crypto}</span>\n    </div>\n    <div>\n      Number of coins:{\" \"}\n      <span className=\"span-100 result-1\">\n        {numberOfCoins !== 0 ? parseFloat(numberOfCoins).toFixed(2) : \"-\"}\n      </span>\n    </div>\n    <div>\n      Total Return:{\" \"}\n      <span className=\"span-100 result-1\">\n        {formattedReturn !== 0 ? formattedReturn : \"-\"}\n      </span>\n    </div>\n    <div>\n      Profit:{\" \"}\n      <span\n        className={`span-100 ${profit > 0 ? \"result-2\" : \"result-negative\"}`}\n      >\n        {formattedProfit !== 0 ? formattedProfit : \"\"}\n      </span>\n    </div>\n  </div>\n);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  useSetInvestment,\n  useCoinUpdate,\n  useTotalReturn,\n  useSetProfit,\n  useSetFormattedProfit,\n} from \"./hooks\";\n\nimport CryptoInput from \"./inputs/CryptoInput\";\nimport ValueInput from \"./inputs/ValueInput\";\nimport Roi from \"./Roi\";\n\nconst CryptoCalculator = ({\n  closeable,\n  id,\n  closeClick,\n  investment,\n  updateInvestment,\n}) => {\n  const [costPerCoin, setCostPerCoin] = useState(0);\n  const [totalInvestment, setTotalInvestment] = useSetInvestment(investment);\n  const [futureCost, setFutureCost] = useState(0);\n  const [crypto, setCrypto] = useState(\"\");\n  const numberOfCoins = useCoinUpdate(costPerCoin, totalInvestment);\n  const totalReturn = useTotalReturn(\n    costPerCoin,\n    totalInvestment,\n    futureCost,\n    numberOfCoins\n  );\n  const profit = useSetProfit(totalReturn, totalInvestment, futureCost);\n  const [formattedProfit, formattedReturn] = useSetFormattedProfit(\n    totalReturn,\n    profit\n  );\n\n  const onClickCurrent = (price, cryptoName) => {\n    if (price) {\n      setCostPerCoin(price);\n    }\n    if (cryptoName) {\n      setCrypto(cryptoName);\n    }\n  };\n\n  const investmentHandler = (investment) => {\n    setTotalInvestment(investment);\n    if (updateInvestment) {\n      updateInvestment(investment);\n    }\n  };\n\n  useEffect(() => {\n    setTotalInvestment(investment);\n  }, [investment]);\n\n  return (\n    <div className=\"flex-row\">\n      <div className=\"card-container card-1\">\n        {closeable && (\n          <div className=\"close\" onClick={() => closeClick(id)}>\n            <div className=\"close-x\">x</div>\n          </div>\n        )}\n\n        <CryptoInput\n          onClickCurrent={onClickCurrent}\n          setCrypto={setCrypto}\n          crypto={crypto}\n        />\n\n        <ValueInput\n          label=\"Purchase price\"\n          onChangeHandler={setCostPerCoin}\n          value={costPerCoin}\n          placeholder={\"cost p/coin when purchased\"}\n        />\n\n        <ValueInput\n          label=\"Total Investment\"\n          onChangeHandler={investmentHandler}\n          value={closeable ? investment : totalInvestment}\n          disabled={closeable ? true : false}\n          placeholder={\"ie $25,000\"}\n        />\n\n        <ValueInput\n          label=\"Price after purchase\"\n          onChangeHandler={setFutureCost}\n          value={futureCost}\n          placeholder={\"expected future price $\"}\n        />\n      </div>\n\n      <Roi\n        crypto={crypto}\n        numberOfCoins={numberOfCoins}\n        formattedProfit={formattedProfit}\n        formattedReturn={formattedReturn}\n        profit={profit}\n      />\n    </div>\n  );\n};\n\nexport default CryptoCalculator;\n","import { useState, useEffect } from \"react\";\n\nexport function useSetInvestment(investment) {\n  const [totalInvestment, setTotalInvestment] = useState(investment);\n  useEffect(() => {\n    setTotalInvestment(totalInvestment);\n  }, [totalInvestment]);\n  return [totalInvestment, setTotalInvestment];\n}\n\nexport function useCoinUpdate(costPerCoin, totalInvestment) {\n  const [numberOfCoins, setNumberOfCoins] = useState(0);\n\n  useEffect(() => {\n    let n;\n    if (costPerCoin && totalInvestment) {\n      let costPerCoinStr = costPerCoin.toString();\n      n = parseFloat(\n        totalInvestment.replace(/[^0-9.]/g, \"\") /\n          costPerCoinStr.replace(/[^0-9.]/g, \"\")\n      ).toFixed(6);\n      setNumberOfCoins(n);\n    } else {\n      setNumberOfCoins(0);\n    }\n  }, [costPerCoin, totalInvestment]);\n  return numberOfCoins;\n}\n\nexport function useTotalReturn(\n  costPerCoin,\n  totalInvestment,\n  futureCost,\n  numberOfCoins\n) {\n  const [totalReturn, setTotalReturn] = useState(0);\n  useEffect(() => {\n    if (costPerCoin && totalInvestment && futureCost && numberOfCoins) {\n      const returnValue = parseFloat(\n        numberOfCoins.replace(/[^0-9.]/, \"\") *\n          futureCost.replace(/[^0-9.]/g, \"\")\n      ).toFixed(2);\n      setTotalReturn(returnValue);\n    } else if (costPerCoin && totalInvestment) {\n      setTotalReturn(totalInvestment.replace(/[^0-9.]/g, \"\"));\n    } else {\n      setTotalReturn(0);\n    }\n  }, [costPerCoin, totalInvestment, futureCost, numberOfCoins]);\n  return totalReturn;\n}\n\nexport function useSetProfit(totalReturn, totalInvestment, futureCost) {\n  const [profit, setProfit] = useState(0);\n  useEffect(() => {\n    if (futureCost && totalInvestment && totalReturn) {\n      const returnValue = parseFloat(\n        totalReturn.replace(/[^0-9.]/g, \"\") -\n          totalInvestment.replace(/[^0-9.]/g, \"\")\n      ).toFixed(2);\n      setProfit(returnValue);\n    } else {\n      setProfit(0);\n    }\n  }, [totalReturn, totalInvestment, futureCost]);\n  return profit;\n}\n\nexport function useSetFormattedProfit(totalReturn, profit) {\n  const [formattedProfit, setFormattedProfit] = useState(0);\n  const [formattedReturn, setFormattedReturn] = useState(0);\n\n  useEffect(() => {\n    if (totalReturn) {\n      setFormattedReturn(\n        new Intl.NumberFormat(\"en-US\", {\n          style: \"currency\",\n          currency: \"USD\",\n        }).format(totalReturn.replace(/[^0-9.]/, \"\"))\n      );\n    } else {\n      setFormattedReturn(0);\n    }\n    if (profit) {\n      let formatted = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n      }).format(profit.replace(/[^0-9.-]/, \"\"));\n      if (profit < 0) {\n        setFormattedProfit(`-${formatted.replace(/-/, \"\")}`);\n      } else {\n        setFormattedProfit(`${formatted}`);\n      }\n    } else {\n      setFormattedProfit(0);\n    }\n  }, [totalReturn, profit]);\n  return [formattedProfit, formattedReturn];\n}\n","import { useState, useRef, useEffect, useContext, useMemo } from \"react\";\nimport { AppContext } from \"../\";\n\nconst api = \"https://min-api.cryptocompare.com/data\";\n\nexport function useHistorical(date) {\n  const [isUsingHistorical, setIsUsingHistorical] = useState();\n  useEffect((date) => {\n    setIsUsingHistorical(isDateHistorical(date));\n  });\n  return isUsingHistorical;\n}\n\nexport function useApiFetch(date) {\n  let timer;\n  const [ticker, setTicker] = useContext(AppContext);\n  const [eth, setETH] = useState(\"...\");\n  const [btc, setBTC] = useState(\"...\");\n  const [bch, setBCH] = useState(\"...\");\n  const [ltc, setLTC] = useState(\"...\");\n  const [bnb, setBNB] = useState(\"...\");\n  const [count, setTimercount] = useState(0);\n  const countRef = useRef(count);\n\n  const updateTickerData = () => {\n    timer = setTimeout(() => {\n      if (isDateHistorical(selectedDate)) {\n        clearTimeout(timer);\n      } else {\n        setTimercount(countRef.current++);\n        updateTickerData();\n      }\n    }, 10000);\n  };\n\n  useEffect(() => {\n    setSelectedDate(date);\n    if (!isDateHistorical(date)) {\n      clearTimeout(timer);\n      setTimercount(countRef.current++);\n      updateTickerData();\n    } else {\n      clearTimeout(timer);\n    }\n  }, [date]);\n\n  useEffect(async () => {\n    const today = new Date(Date.now()).toLocaleString().split(\",\")[0];\n    const selectedDate = new Date(date).toLocaleString().split(\",\")[0];\n    if (selectedDate !== today) {\n      setData();\n      const data = await getTickersFromDate(selectedDate);\n      setData(data);\n    }\n  }, [date]);\n\n  const setData = (data) => {\n    setETH(data ? data.ETH.USD : \"...\");\n    setBTC(data ? data.BTC.USD : \"...\");\n    setBCH(data ? data.BCH.USD : \"...\");\n    setLTC(data ? data.LTC.USD : \"...\");\n    setBNB(data ? data.BNB.USD : \"...\");\n    setTicker({\n      eth: data ? data.ETH.USD : \"...\",\n      btc: data ? data.BTC.USD : \"...\",\n      bch: data ? data.BCH.USD : \"...\",\n      ltc: data ? data.LTC.USD : \"...\",\n      bnb: data ? data.BNB.USD : \"...\",\n    });\n  };\n\n  useEffect(() => {\n    const endpoint = `${api}/pricemulti?fsyms=ETH,BTC,BCH,LTC,BNB&tsyms=USD&extraParams=CryptoCalculator&ts=1605549600`;\n    const headers = {\n      \"Content-Type\": \"application-json\",\n    };\n    fetch(endpoint, headers)\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data);\n      });\n  }, [count]);\n\n  return { eth, btc, bch, ltc, bnb };\n}\n\nexport function useToggleDisplayDate(date = new Date(Date.now())) {\n  const [historicalText, setHistoricalText] = useState(\"\");\n  useEffect(() => {\n    const selectDate = new Date(date).toLocaleString().split(\",\")[0];\n    if (isDateHistorical(selectDate)) {\n      setHistoricalText(\"Select a different date\");\n    } else {\n      setHistoricalText(\"Use data from a previous date\");\n    }\n  }, [date]);\n\n  return historicalText;\n}\n\nconst isDateHistorical = (date) => {\n  const today = new Date(Date.now()).toLocaleString().split(\",\")[0];\n  const selectedDate = new Date(date).toLocaleString().split(\",\")[0];\n  return today !== selectedDate;\n};\n\nconst getTickersFromDate = (strDate) => {\n  return new Promise(async (success) => {\n    const datum = Date.parse(strDate);\n    const timestamp = datum / 1000;\n    const symbols = {\n      ETH: { USD: 0 },\n      BTC: { USD: 0 },\n      BCH: { USD: 0 },\n      LTC: { USD: 0 },\n      BNB: { USD: 0 },\n    };\n    let keys = Object.keys(symbols);\n    for (let i = 0; i < keys.length; i++) {\n      const symbol = keys[i];\n      const value = await tickerFetch(symbol, timestamp);\n      symbols[symbol] = value[symbol];\n    }\n    return success(symbols);\n  });\n};\n\nconst tickerFetch = (symbol, timestamp) => {\n  const endpoint = `${api}/pricehistorical?fsym=${symbol}&tsyms=USD&ts=${timestamp}&extraParams=CryptoCalculator`;\n  return fetch(endpoint)\n    .then((response) => response.json())\n    .then((data) => data);\n};\n\nlet selectedDate;\n\nconst setSelectedDate = (d) => {\n  selectedDate = d;\n  console.log(selectedDate);\n};\n\nconst getSelectedDate = () => {\n  return selectedDate;\n};\n","export const dateFormatter = (date) => {\n  const datum = date || new Date(Date.now());\n  return new Date(datum).toLocaleString().split(\",\")[0];\n};\n","import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useApiFetch, useToggleDisplayDate, useHistorical } from \"./hooks\";\nimport { dateFormatter } from \"./utils\";\n\nexport default () => {\n  const [showHistorical, toggleShowHistorical] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const { eth, btc, bnb, ltc, bch } = useApiFetch(startDate);\n  const historicalText = useToggleDisplayDate(startDate);\n  const isUsingHistorical = useHistorical(startDate);\n\n  const formatter = (price) => {\n    if (price && !isNaN(price)) {\n      return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n      }).format(price);\n    } else {\n      return price;\n    }\n  };\n\n  const displayDatePicker = () => {\n    toggleShowHistorical(!showHistorical);\n  };\n\n  const onDateSelect = (date) => {\n    toggleShowHistorical(false);\n  };\n\n  return (\n    <div>\n      <div className=\"ticker-container flex-row\">\n        <div className=\"text-medium\">Data from {dateFormatter(startDate)} </div>\n        <div className=\"link marginLeft10\" onClick={() => displayDatePicker()}>\n          {historicalText}\n        </div>\n        <div className=\"text-medium marginLeft10\">\n          {showHistorical && (\n            <DatePicker\n              selected={startDate}\n              onChange={(date) => setStartDate(date)}\n              onSelect={onDateSelect}\n            />\n          )}\n        </div>\n      </div>\n\n      <div className=\"ticker-container flex-row\">\n        <div className=\"ticker-label\">Bitcoin: </div>\n        <div className=\"ticker-value\">{formatter(btc)}</div>\n\n        <div className=\"ticker-label\">Ethereum: </div>\n        <div className=\"ticker-value\">{formatter(eth)}</div>\n\n        <div className=\"ticker-label\">Bitcoin Cash: </div>\n        <div className=\"ticker-value\">{formatter(bch)}</div>\n\n        <div className=\"ticker-label\">Litecoin: </div>\n        <div className=\"ticker-value\">{formatter(ltc)}</div>\n\n        <div className=\"ticker-label\">Binance: </div>\n        <div className=\"ticker-value\">{formatter(bnb)}</div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { CryptoCalculator, Ticker } from \"../../components/elements\";\n\nconst initialCalculatorList = [];\n\nconst Home = () => {\n  const [childCalculators, setChildCalculators] = useState(\n    initialCalculatorList\n  );\n\n  const [investment, setInvestment] = useState(0);\n\n  useEffect(() => {\n    document.title = \"Crypto Calculator ROI\";\n  });\n\n  const closeClick = (id) => {\n    const filtered = childCalculators.filter((item) => item.id !== id);\n    setChildCalculators(filtered);\n  };\n\n  const updateInvestmentHandler = (investment) => {\n    setInvestment(investment);\n  };\n\n  return (\n    <div>\n      <div className=\"flex-row\">\n        <div className=\"title-large\">Crypto ROI Calculator</div>\n        <div className=\"heading-container heading\">bitcoinprojection.com</div>\n      </div>\n\n      <Ticker />\n      <CryptoCalculator updateInvestment={updateInvestmentHandler} />\n      {childCalculators.map((item, n) => (\n        <CryptoCalculator\n          key={n}\n          closeable={true}\n          id={n}\n          closeClick={closeClick}\n          investment={investment}\n        />\n      ))}\n      <div className=\"button-container\">\n        <button\n          onClick={() => {\n            setChildCalculators((childCalculators) => [\n              ...childCalculators,\n              { id: childCalculators.length },\n            ]);\n          }}\n        >\n          Compare +\n        </button>\n      </div>\n      <div className=\"blurb\">\n        I needed a quick way to determine future crypto profit projections with\n        my investment. For example, if I invested $25,000 in Ethereum at a\n        current price of $1700, what would my return look like if the future\n        price per coin rose to $1800? What if it rose to $3000? <br />\n        How would that compare to an investment in Bitcoin? <br />\n        Use the bitcoin / crypto future calculator above. <br />\n        <br />\n        Also, I'm open to suggestions!\n        <br />\n        <a href=\"https://twitter.com/JoeL42737181\" className=\"link-light\">\n          Find me on Twitter :-)\n        </a>\n        <br />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { Home } from \"./containers/home\";\nimport \"./css/general.scss\";\nimport { AppContextProvider } from \"./components/elements/AppContext\";\n\nfunction App() {\n  return (\n    <AppContextProvider>\n      <div className=\"body-centered\">\n        <Home />\n      </div>\n    </AppContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}